/// Resource Type definition for AWS::Lightsail::Container
extends ".../AWS/Resource.pkl"
Type = "AWS::Lightsail::Container"
Properties: Props?
class Props {
    /// The name for the container service.
    ServiceName: String(length <= 63 && length >= 1 && matches(Regex(#"^[a-z0-9]{1,2}|[a-z0-9][a-z0-9-]+[a-z0-9]$"#)))?
    /// The power specification for the container service.
    Power: String?
    ContainerArn: String?
    /// The scale specification for the container service.
    Scale: Int?
    /// The public domain names to use with the container service, such as
    /// example.com and www.example.com.
    PublicDomainNames: Listing<PublicDomainName>?
    /// Describes a container deployment configuration of an Amazon Lightsail
    /// container service.
    ContainerServiceDeployment: ContainerServiceDeployment?
    /// A Boolean value to indicate whether the container service is disabled.
    IsDisabled: Boolean?
    /// A Boolean value to indicate whether the container service has access
    /// to private container image repositories, such as Amazon Elastic
    /// Container Registry (Amazon ECR) private repositories.
    PrivateRegistryAccess: PrivateRegistryAccess?
    /// The publicly accessible URL of the container service.
    Url: String?
    /// The principal ARN of the container service.
    PrincipalArn: String?
    /// An array of key-value pairs to apply to this resource.
    Tags: Listing<Tag>?
}
/// The public domain name to use with the container service, such as
/// example.com and www.example.com.
class PublicDomainName {
    CertificateName: String?
    /// An object that describes the configuration for the containers of the
    /// deployment.
    DomainNames: Listing<String>?
}
/// Describes a container deployment configuration of an Amazon Lightsail
/// container service.
class ContainerServiceDeployment {
    /// An object that describes the configuration for the containers of the
    /// deployment.
    Containers: Listing<Container>?
    /// An object that describes the endpoint of the deployment.
    PublicEndpoint: PublicEndpoint?
}
/// Describes the settings of a container that will be launched, or that
/// is launched, to an Amazon Lightsail container service.
class Container {
    /// The name of the container.
    ContainerName: String?
    /// The launch command for the container.
    Command: Listing<String>?
    /// The environment variables of the container.
    Environment: Listing<EnvironmentVariable>?
    /// The name of the image used for the container.
    Image: String?
    /// The open firewall ports of the container.
    Ports: Listing<PortInfo>?
}
class EnvironmentVariable {
    Variable: String?
    Value: String?
}
class PortInfo {
    Port: String?
    Protocol: String?
}
/// Describes the settings of a public endpoint for an Amazon Lightsail
/// container service.
class PublicEndpoint {
    /// The name of the container for the endpoint.
    ContainerName: String?
    /// The port of the container to which traffic is forwarded to.
    ContainerPort: Int?
    /// An object that describes the health check configuration of the
    /// container.
    HealthCheckConfig: HealthCheckConfig?
}
/// Describes the health check configuration of an Amazon Lightsail
/// container service.
class HealthCheckConfig {
    /// The number of consecutive health checks successes required before
    /// moving the container to the Healthy state. The default value is 2.
    HealthyThreshold: Int?
    /// The approximate interval, in seconds, between health checks of an
    /// individual container. You can specify between 5 and 300 seconds. The
    /// default value is 5.
    IntervalSeconds: Int?
    /// The path on the container on which to perform the health check. The
    /// default value is /.
    Path: String?
    /// The HTTP codes to use when checking for a successful response from a
    /// container. You can specify values between 200 and 499. You can specify
    /// multiple values (for example, 200,202) or a range of values (for
    /// example, 200-299).
    SuccessCodes: String?
    /// The amount of time, in seconds, during which no response means a
    /// failed health check. You can specify between 2 and 60 seconds. The
    /// default value is 2.
    TimeoutSeconds: Int?
    /// The number of consecutive health check failures required before moving
    /// the container to the Unhealthy state. The default value is 2.
    UnhealthyThreshold: Int?
}
/// An object to describe the configuration for the container service to
/// access private container image repositories, such as Amazon Elastic
/// Container Registry (Amazon ECR) private repositories.
class PrivateRegistryAccess {
    /// An object to describe a request to activate or deactivate the role
    /// that you can use to grant an Amazon Lightsail container service access
    /// to Amazon Elastic Container Registry (Amazon ECR) private
    /// repositories.
    EcrImagePullerRole: EcrImagePullerRole?
}
/// An object to describe a request to activate or deactivate the role
/// that you can use to grant an Amazon Lightsail container service access
/// to Amazon Elastic Container Registry (Amazon ECR) private
/// repositories.
class EcrImagePullerRole {
    /// A Boolean value that indicates whether to activate the role.
    IsActive: Boolean?
    /// The Amazon Resource Name (ARN) of the role, if it is activated.
    PrincipalArn: String?
}
/// A key-value pair to associate with a resource.
class Tag {
    /// The key name of the tag. You can specify a value that is 1 to 128
    /// Unicode characters in length and cannot be prefixed with aws:. You can
    /// use any of the following characters: the set of Unicode letters,
    /// digits, whitespace, _, ., /, =, +, and -.
    Key: String(length <= 128 && length >= 1)
    /// The value for the tag. You can specify a value that is 0 to 256
    /// Unicode characters in length and cannot be prefixed with aws:. You can
    /// use any of the following characters: the set of Unicode letters,
    /// digits, whitespace, _, ., /, =, +, and -.
    Value: String(length <= 256 && length >= 0)?
}
