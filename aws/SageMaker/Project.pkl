/// Resource Type definition for AWS::SageMaker::Project
extends ".../AWS/Resource.pkl"
Type = "AWS::SageMaker::Project"
Properties: Props?
class Props {
    /// An array of key-value pairs to apply to this resource.
    Tags: Listing<Tag>?
    ProjectArn: String(length <= 2048 && length >= 1 && matches(Regex(#"arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:project.*"#)))?
    ProjectId: String(length <= 20 && matches(Regex(#"^[a-zA-Z0-9](-*[a-zA-Z0-9])*"#)))?
    ProjectName: String(length <= 32 && length >= 1 && matches(Regex(#"^[a-zA-Z0-9](-*[a-zA-Z0-9])*$"#)))?
    ProjectDescription: String(length <= 1024 && matches(Regex(#".*"#)))?
    /// The time at which the project was created.
    CreationTime: String?
    /// Input ServiceCatalog Provisioning Details
    ServiceCatalogProvisioningDetails: ServiceCatalogProvisioningDetails?
    /// Provisioned ServiceCatalog  Details
    ServiceCatalogProvisionedProductDetails: ServiceCatalogProvisionedProductDetails?
    /// The status of a project.
    ProjectStatus: "Pending" | "CreateInProgress" | "CreateCompleted" | "CreateFailed" | "DeleteInProgress" | "DeleteFailed" | "DeleteCompleted" | *Null
}
/// A key-value pair to associate with a resource.
class Tag {
    /// The key name of the tag. You can specify a value that is 1 to 127
    /// Unicode characters in length and cannot be prefixed with aws:. You can
    /// use any of the following characters: the set of Unicode letters,
    /// digits, whitespace, _, ., /, =, +, and -.
    Key: String(length <= 128 && length >= 1 && matches(Regex(#"^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$"#)))
    /// The value for the tag. You can specify a value that is 1 to 255
    /// Unicode characters in length and cannot be prefixed with aws:. You can
    /// use any of the following characters: the set of Unicode letters,
    /// digits, whitespace, _, ., /, =, +, and -.
    Value: String(length <= 256 && matches(Regex(#"^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$"#)))
}
/// Input ServiceCatalog Provisioning Details
class ServiceCatalogProvisioningDetails {
    ProductId: String(length <= 100 && matches(Regex(#"^[a-zA-Z0-9](-*[a-zA-Z0-9])*$"#)))
    ProvisioningArtifactId: String(length <= 100 && matches(Regex(#"^[a-zA-Z0-9](-*[a-zA-Z0-9])*$"#)))?
    PathId: String(length <= 100 && matches(Regex(#"^[a-zA-Z0-9](-*[a-zA-Z0-9])*$"#)))?
    /// Parameters specified by the administrator that are required for
    /// provisioning the product.
    ProvisioningParameters: Listing<ProvisioningParameter>?
}
/// Information about a parameter used to provision a product.
class ProvisioningParameter {
    /// The parameter key.
    Key: String(length <= 1000 && length >= 1 && matches(Regex(#".*"#)))
    /// The parameter value.
    Value: String(length <= 4096 && matches(Regex(#".*"#)))
}
/// Provisioned ServiceCatalog  Details
class ServiceCatalogProvisionedProductDetails {
    ProvisionedProductId: String(length <= 100 && matches(Regex(#"^[a-zA-Z0-9](-*[a-zA-Z0-9])*$"#)))?
    ProvisionedProductStatusMessage: String?
}
