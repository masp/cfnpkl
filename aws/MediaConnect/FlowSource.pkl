/// Resource schema for AWS::MediaConnect::FlowSource
extends ".../AWS/Resource.pkl"
Type = "AWS::MediaConnect::FlowSource"
Properties: Props?
class Props {
    /// The ARN of the flow.
    FlowArn: String?
    /// The ARN of the source.
    SourceArn: String?
    /// The type of encryption that is used on the content ingested from this
    /// source.
    Decryption: Encryption?
    /// A description for the source. This value is not used or seen outside
    /// of the current AWS Elemental MediaConnect account.
    Description: String?
    /// The ARN of the entitlement that allows you to subscribe to content
    /// that comes from another AWS account. The entitlement is set by the
    /// content originator and the ARN is generated as part of the
    /// originator's flow.
    EntitlementArn: String?
    /// The source configuration for cloud flows receiving a stream from a
    /// bridge.
    GatewayBridgeSource: GatewayBridgeSource?
    /// The IP address that the flow will be listening on for incoming
    /// content.
    IngestIp: String?
    /// The port that the flow will be listening on for incoming content.
    IngestPort: Int?
    /// The smoothing max bitrate for RIST, RTP, and RTP-FEC streams.
    MaxBitrate: Int?
    /// The maximum latency in milliseconds. This parameter applies only to
    /// RIST-based and Zixi-based streams.
    MaxLatency: Int?
    /// The minimum latency in milliseconds.
    MinLatency: Int?
    /// The name of the source.
    Name: String?
    /// The protocol that is used by the source.
    Protocol: "zixi-push" | "rtp-fec" | "rtp" | "rist" | "srt-listener" | "srt-caller" | *Null
    /// The IP address that the flow communicates with to initiate connection
    /// with the sender for fujitsu-qos protocol.
    SenderIpAddress: String?
    /// The port that the flow uses to send outbound requests to initiate
    /// connection with the sender for fujitsu-qos protocol.
    SenderControlPort: Int?
    /// The stream ID that you want to use for this transport. This parameter
    /// applies only to Zixi-based streams.
    StreamId: String?
    /// The port that the flow will be listening on for incoming
    /// content.(ReadOnly)
    SourceIngestPort: String?
    /// Source IP or domain name for SRT-caller protocol.
    SourceListenerAddress: String?
    /// Source port for SRT-caller protocol.
    SourceListenerPort: Int?
    /// The name of the VPC Interface this Source is configured with.
    VpcInterfaceName: String?
    /// The range of IP addresses that should be allowed to contribute content
    /// to your source. These IP addresses should be in the form of a
    /// Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16.
    WhitelistCidr: String?
}
/// Information about the encryption of the flow.
class Encryption {
    /// The type of algorithm that is used for the encryption (such as aes128,
    /// aes192, or aes256).
    Algorithm: "aes128" | "aes192" | "aes256" | *Null
    /// A 128-bit, 16-byte hex value represented by a 32-character string, to
    /// be used with the key for encrypting content. This parameter is not
    /// valid for static key encryption.
    ConstantInitializationVector: String?
    /// The value of one of the devices that you configured with your digital
    /// rights management (DRM) platform key provider. This parameter is
    /// required for SPEKE encryption and is not valid for static key
    /// encryption.
    DeviceId: String?
    /// The type of key that is used for the encryption. If no keyType is
    /// provided, the service will use the default setting (static-key).
    KeyType: "speke" | "static-key" | "srt-password" | *Null
    /// The AWS Region that the API Gateway proxy endpoint was created in.
    /// This parameter is required for SPEKE encryption and is not valid for
    /// static key encryption.
    Region: String?
    /// An identifier for the content. The service sends this value to the key
    /// server to identify the current endpoint. The resource ID is also known
    /// as the content ID. This parameter is required for SPEKE encryption and
    /// is not valid for static key encryption.
    ResourceId: String?
    /// The ARN of the role that you created during setup (when you set up AWS
    /// Elemental MediaConnect as a trusted entity).
    RoleArn: String
    ///  The ARN of the secret that you created in AWS Secrets Manager to
    /// store the encryption key. This parameter is required for static key
    /// encryption and is not valid for SPEKE encryption.
    SecretArn: String?
    /// The URL from the API Gateway proxy that you set up to talk to your key
    /// server. This parameter is required for SPEKE encryption and is not
    /// valid for static key encryption.
    Url: String?
}
/// The source configuration for cloud flows receiving a stream from a
/// bridge.
class GatewayBridgeSource {
    /// The ARN of the bridge feeding this flow.
    BridgeArn: String
    /// The name of the VPC interface attachment to use for this bridge
    /// source.
    VpcInterfaceAttachment: VpcInterfaceAttachment?
}
/// The settings for attaching a VPC interface to an resource.
class VpcInterfaceAttachment {
    /// The name of the VPC interface to use for this resource.
    VpcInterfaceName: String?
}
