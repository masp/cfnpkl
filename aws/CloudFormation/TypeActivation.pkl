/// Enable a resource that has been published in the CloudFormation
/// Registry.
extends ".../AWS/Resource.pkl"
Type = "AWS::CloudFormation::TypeActivation"
Properties: Props?
class Props {
    /// The Amazon Resource Name (ARN) of the extension.
    Arn: String(matches(Regex(#"arn:aws[A-Za-z0-9-]{0,64}:cloudformation:[A-Za-z0-9-]{1,64}:([0-9]{12})?:type/.+"#)))?
    /// The Amazon Resource Name (ARN) of the IAM execution role to use to
    /// register the type. If your resource type calls AWS APIs in any of its
    /// handlers, you must create an IAM execution role that includes the
    /// necessary permissions to call those AWS APIs, and provision that
    /// execution role in your account. CloudFormation then assumes that
    /// execution role to provide your resource type with the appropriate
    /// credentials.
    ExecutionRoleArn: String?
    /// The publisher id assigned by CloudFormation for publishing in this
    /// region.
    PublisherId: String(length <= 40 && length >= 1 && matches(Regex(#"[0-9a-zA-Z]{40}"#)))?
    /// Specifies logging configuration information for a type.
    LoggingConfig: LoggingConfig?
    /// The Amazon Resource Number (ARN) assigned to the public extension upon
    /// publication
    PublicTypeArn: String(length <= 1024 && matches(Regex(#"arn:aws[A-Za-z0-9-]{0,64}:cloudformation:[A-Za-z0-9-]{1,64}:([0-9]{12})?:type/.+"#)))?
    /// Whether to automatically update the extension in this account and
    /// region when a new minor version is published by the extension
    /// publisher. Major versions released by the publisher must be manually
    /// updated.
    AutoUpdate: Boolean?
    /// An alias to assign to the public extension in this account and region.
    /// If you specify an alias for the extension, you must then use the alias
    /// to refer to the extension in your templates.
    TypeNameAlias: String(length <= 204 && length >= 10 && matches(Regex(#"[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}(::MODULE){0,1}"#)))?
    /// Manually updates a previously-enabled type to a new major or minor
    /// version, if available. You can also use this parameter to update the
    /// value of AutoUpdateEnabled
    VersionBump: "MAJOR" | "MINOR" | *Null
    /// The Major Version of the type you want to enable
    MajorVersion: String(length <= 100000 && length >= 1)?
    /// The name of the type being registered.  We recommend that type names
    /// adhere to the following pattern:
    /// company_or_organization::service::type.
    TypeName: String(matches(Regex(#"[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}(::MODULE){0,1}"#)))?
    /// The kind of extension
    Type: "RESOURCE" | "MODULE" | "HOOK" | *Null
}
class LoggingConfig {
    /// The Amazon CloudWatch log group to which CloudFormation sends error
    /// logging information when invoking the type's handlers.
    LogGroupName: String(length <= 512 && length >= 1 && matches(Regex(#"^[\.\-_/#A-Za-z0-9]+$"#)))?
    /// The ARN of the role that CloudFormation should assume when sending log
    /// entries to CloudWatch logs.
    LogRoleArn: String(length <= 256 && length >= 1)?
}
