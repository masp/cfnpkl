/// Test and Publish a resource that has been registered in the
/// CloudFormation Registry.
extends ".../AWS/Resource.pkl"
Type = "AWS::CloudFormation::PublicTypeVersion"
Properties: Props?
class Props {
    /// The Amazon Resource Number (ARN) of the extension.
    Arn: String(matches(Regex(#"arn:aws[A-Za-z0-9-]{0,64}:cloudformation:[A-Za-z0-9-]{1,64}:[0-9]{12}:type/.+"#)))?
    /// The Amazon Resource Number (ARN) of the extension with the versionId.
    TypeVersionArn: String(matches(Regex(#"arn:aws[A-Za-z0-9-]{0,64}:cloudformation:[A-Za-z0-9-]{1,64}:[0-9]{12}:type/.+"#)))?
    /// The version number of a public third-party extension
    PublicVersionNumber: String(length <= 64 && length >= 5)?
    /// The publisher id assigned by CloudFormation for publishing in this
    /// region.
    PublisherId: String(length <= 40 && length >= 1 && matches(Regex(#"[0-9a-zA-Z]{40}"#)))?
    /// The Amazon Resource Number (ARN) assigned to the public extension upon
    /// publication
    PublicTypeArn: String(length <= 1024 && matches(Regex(#"arn:aws[A-Za-z0-9-]{0,64}:cloudformation:[A-Za-z0-9-]{1,64}:([0-9]{12})?:type/.+"#)))?
    /// The name of the type being registered.  We recommend that type names
    /// adhere to the following pattern:
    /// company_or_organization::service::type.
    TypeName: String(matches(Regex(#"[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}(::MODULE){0,1}"#)))?
    /// A url to the S3 bucket where logs for the testType run will be
    /// available
    LogDeliveryBucket: String?
    /// The kind of extension
    Type: "RESOURCE" | "MODULE" | "HOOK" | *Null
}
