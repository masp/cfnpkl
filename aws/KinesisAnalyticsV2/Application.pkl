/// Creates an Amazon Kinesis Data Analytics application. For information
/// about creating a Kinesis Data Analytics application, see [Creating an 
/// Application](https://docs.aws.amazon.com/kinesisanalytics/latest/java/
/// getting-started.html).
extends ".../AWS/Resource.pkl"
Type = "AWS::KinesisAnalyticsV2::Application"
Properties: Props?
class Props {
    /// Use this parameter to configure the application.
    ApplicationConfiguration: ApplicationConfiguration?
    /// The description of the application.
    ApplicationDescription: String(length <= 1024 && length >= 0)?
    /// To create a Kinesis Data Analytics Studio notebook, you must set the
    /// mode to `INTERACTIVE`. However, for a Kinesis Data Analytics for
    /// Apache Flink application, the mode is optional.
    ApplicationMode: "INTERACTIVE" | "STREAMING" | *Null
    /// The name of the application.
    ApplicationName: String(length <= 128 && length >= 1 && matches(Regex(#"^[a-zA-Z0-9_.-]+$"#)))?
    /// The runtime environment for the application.
    RuntimeEnvironment: String?
    /// Specifies the IAM role that the application uses to access external
    /// resources.
    ServiceExecutionRole: String(length <= 2048 && length >= 1 && matches(Regex(#"^arn:.*$"#)))?
    /// Specifies run configuration (start parameters) of a Kinesis Data
    /// Analytics application. Evaluated on update for RUNNING applications an
    /// only.
    RunConfiguration: RunConfiguration?
    /// Used to configure start of maintenance window.
    ApplicationMaintenanceConfiguration: ApplicationMaintenanceConfiguration?
    /// A list of one or more tags to assign to the application. A tag is a
    /// key-value pair that identifies an application. Note that the maximum
    /// number of application tags includes system tags. The maximum number of
    /// user-defined application tags is 50.
    Tags: Listing<Tag>?
}
/// Specifies the creation parameters for a Kinesis Data Analytics
/// application.
class ApplicationConfiguration {
    /// The code location and type parameters for a Flink-based Kinesis Data
    /// Analytics application.
    ApplicationCodeConfiguration: ApplicationCodeConfiguration?
    /// Describes whether snapshots are enabled for a Flink-based Kinesis Data
    /// Analytics application.
    ApplicationSnapshotConfiguration: ApplicationSnapshotConfiguration?
    /// Describes execution properties for a Flink-based Kinesis Data
    /// Analytics application.
    EnvironmentProperties: EnvironmentProperties?
    /// The creation and update parameters for a Flink-based Kinesis Data
    /// Analytics application.
    FlinkApplicationConfiguration: FlinkApplicationConfiguration?
    /// The creation and update parameters for a SQL-based Kinesis Data
    /// Analytics application.
    SqlApplicationConfiguration: SqlApplicationConfiguration?
    /// The configuration parameters for a Kinesis Data Analytics Studio
    /// notebook.
    ZeppelinApplicationConfiguration: ZeppelinApplicationConfiguration?
    /// The array of descriptions of VPC configurations available to the
    /// application.
    VpcConfigurations: Listing<VpcConfiguration>?
}
/// Describes code configuration for an application.
class ApplicationCodeConfiguration {
    /// The location and type of the application code.
    CodeContent: CodeContent
    /// Specifies whether the code content is in text or zip format.
    CodeContentType: "PLAINTEXT" | "ZIPFILE"
}
/// Specifies either the application code, or the location of the
/// application code, for a Flink-based Kinesis Data Analytics
/// application.
class CodeContent {
    /// The zip-format code for a Flink-based Kinesis Data Analytics
    /// application.
    ZipFileContent: String?
    /// Information about the Amazon S3 bucket that contains the application
    /// code.
    S3ContentLocation: S3ContentLocation?
    /// The text-format code for a Flink-based Kinesis Data Analytics
    /// application.
    TextContent: String(length <= 102400 && length >= 1)?
}
/// The location of an application or a custom artifact.
class S3ContentLocation {
    /// The Amazon Resource Name (ARN) for the S3 bucket containing the
    /// application code.
    BucketARN: String(length <= 2048 && length >= 1 && matches(Regex(#"^arn:.*$"#)))
    /// The file key for the object containing the application code.
    FileKey: String(length <= 1024 && length >= 1)
    /// The version of the object containing the application code.
    ObjectVersion: String(length <= 1024 && length >= 1)?
}
/// Describes whether snapshots are enabled for a Flink-based Kinesis Data
/// Analytics application.
class ApplicationSnapshotConfiguration {
    /// Describes whether snapshots are enabled for a Flink-based Kinesis Data
    /// Analytics application.
    SnapshotsEnabled: Boolean
}
/// Describes execution properties for a Flink-based Kinesis Data
/// Analytics application.
class EnvironmentProperties {
    /// Describes the execution property groups.
    PropertyGroups: Listing<PropertyGroup>?
}
/// Property key-value pairs passed into an application.
class PropertyGroup {
    /// Describes the key of an application execution property key-value pair.
    PropertyGroupId: String(length <= 50 && length >= 1 && matches(Regex(#"^[a-zA-Z0-9_.-]+$"#)))?
    /// Describes the value of an application execution property key-value
    /// pair.
    PropertyMap: Mapping?
}
/// Describes configuration parameters for a Flink-based Kinesis Data
/// Analytics application or a Studio notebook.
class FlinkApplicationConfiguration {
    /// Describes an application's checkpointing configuration. Checkpointing
    /// is the process of persisting application state for fault tolerance.
    /// For more information, see Checkpoints for Fault Tolerance in the
    /// Apache Flink Documentation.
    CheckpointConfiguration: CheckpointConfiguration?
    /// Describes configuration parameters for Amazon CloudWatch logging for
    /// an application.
    MonitoringConfiguration: MonitoringConfiguration?
    /// Describes parameters for how an application executes multiple tasks
    /// simultaneously.
    ParallelismConfiguration: ParallelismConfiguration?
}
/// Describes an application's checkpointing configuration. Checkpointing
/// is the process of persisting application state for fault tolerance.
/// For more information, see Checkpoints for Fault Tolerance in the
/// Apache Flink Documentation.
class CheckpointConfiguration {
    /// Describes whether the application uses Kinesis Data Analytics' default
    /// checkpointing behavior. You must set this property to `CUSTOM` in
    /// order to set the `CheckpointingEnabled`, `CheckpointInterval`, or
    /// `MinPauseBetweenCheckpoints` parameters.
    ConfigurationType: "DEFAULT" | "CUSTOM"
    /// Describes whether checkpointing is enabled for a Flink-based Kinesis
    /// Data Analytics application.
    CheckpointingEnabled: Boolean?
    /// Describes the interval in milliseconds between checkpoint operations.
    CheckpointInterval: Int?
    /// Describes the minimum time in milliseconds after a checkpoint
    /// operation completes that a new checkpoint operation can start. If a
    /// checkpoint operation takes longer than the CheckpointInterval, the
    /// application otherwise performs continual checkpoint operations. For
    /// more information, see Tuning Checkpointing in the Apache Flink
    /// Documentation.
    MinPauseBetweenCheckpoints: Int?
}
/// Describes configuration parameters for Amazon CloudWatch logging for a
/// Java-based Kinesis Data Analytics application. For more information
/// about CloudWatch logging, see Monitoring.
class MonitoringConfiguration {
    /// Describes whether to use the default CloudWatch logging configuration
    /// for an application. You must set this property to CUSTOM in order to
    /// set the LogLevel or MetricsLevel parameters.
    ConfigurationType: "DEFAULT" | "CUSTOM"
    /// Describes the granularity of the CloudWatch Logs for an application.
    /// The Parallelism level is not recommended for applications with a
    /// Parallelism over 64 due to excessive costs.
    MetricsLevel: "APPLICATION" | "OPERATOR" | "PARALLELISM" | "TASK" | *Null
    /// Describes the verbosity of the CloudWatch Logs for an application.
    LogLevel: "DEBUG" | "INFO" | "WARN" | "ERROR" | *Null
}
/// Describes parameters for how a Flink-based Kinesis Data Analytics
/// application executes multiple tasks simultaneously. For more
/// information about parallelism, see Parallel Execution in the Apache
/// Flink Documentation
class ParallelismConfiguration {
    /// Describes whether the application uses the default parallelism for the
    /// Kinesis Data Analytics service. You must set this property to `CUSTOM`
    /// in order to change your application's `AutoScalingEnabled`,
    /// `Parallelism`, or `ParallelismPerKPU` properties.
    ConfigurationType: "CUSTOM" | "DEFAULT"
    /// Describes the number of parallel tasks that a Java-based Kinesis Data
    /// Analytics application can perform per Kinesis Processing Unit (KPU)
    /// used by the application. For more information about KPUs, see Amazon
    /// Kinesis Data Analytics Pricing.
    ParallelismPerKPU: Int?
    /// Describes the initial number of parallel tasks that a Java-based
    /// Kinesis Data Analytics application can perform. The Kinesis Data
    /// Analytics service can increase this number automatically if
    /// ParallelismConfiguration:AutoScalingEnabled is set to true.
    Parallelism: Int?
    /// Describes whether the Kinesis Data Analytics service can increase the
    /// parallelism of the application in response to increased throughput.
    AutoScalingEnabled: Boolean?
}
/// Describes the inputs, outputs, and reference data sources for a SQL-
/// based Kinesis Data Analytics application.
class SqlApplicationConfiguration {
    /// The array of Input objects describing the input streams used by the
    /// application.
    Inputs: Listing<Input>?
}
/// When you configure the application input for a SQL-based Kinesis Data
/// Analytics application, you specify the streaming source, the in-
/// application stream name that is created, and the mapping between the
/// two.
class Input {
    /// The name prefix to use when creating an in-application stream. Suppose
    /// that you specify a prefix `"MyInApplicationStream"`. Kinesis Data
    /// Analytics then creates one or more (as per the InputParallelism count
    /// you specified) in-application streams with the names
    /// `"MyInApplicationStream_001"`, `"MyInApplicationStream_002"`, and so
    /// on.
    NamePrefix: String(length <= 32 && length >= 1 && matches(Regex(#"^[^-\s<>&]*$"#)))
    /// Describes the format of the data in the streaming source, and how each
    /// data element maps to corresponding columns in the in-application
    /// stream that is being created.
    InputSchema: InputSchema
    /// If the streaming source is an Amazon Kinesis data stream, identifies
    /// the stream's Amazon Resource Name (ARN).
    KinesisStreamsInput: KinesisStreamsInput?
    /// If the streaming source is an Amazon Kinesis Data Firehose delivery
    /// stream, identifies the delivery stream's ARN.
    KinesisFirehoseInput: KinesisFirehoseInput?
    /// The InputProcessingConfiguration for the input. An input processor
    /// transforms records as they are received from the stream, before the
    /// application's SQL code executes. Currently, the only input processing
    /// configuration available is InputLambdaProcessor.
    InputProcessingConfiguration: InputProcessingConfiguration?
    /// Describes the number of in-application streams to create.
    InputParallelism: InputParallelism?
}
/// For a SQL-based Kinesis Data Analytics application, describes the
/// format of the data in the streaming source, and how each data element
/// maps to corresponding columns created in the in-application stream.
class InputSchema {
    /// Specifies the encoding of the records in the streaming source. For
    /// example, UTF-8.
    RecordEncoding: "UTF-8" | *Null
    /// A list of `RecordColumn` objects.
    RecordColumns: Listing<RecordColumn>
    /// Specifies the format of the records on the streaming source.
    RecordFormat: RecordFormat
}
/// For a SQL-based Kinesis Data Analytics application, describes the
/// mapping of each data element in the streaming source to the
/// corresponding column in the in-application stream. Also used to
/// describe the format of the reference data source.
class RecordColumn {
    /// A reference to the data element in the streaming input or the
    /// reference data source.
    Mapping: String(length <= 65535 && length >= 1)?
    /// The name of the column that is created in the in-application input
    /// stream or reference table.
    Name: String(length <= 256 && length >= 1 && matches(Regex(#"^[^-\s<>&]*$"#)))
    /// The type of column created in the in-application input stream or
    /// reference table.
    SqlType: String(length <= 100 && length >= 1)
}
/// For a SQL-based Kinesis Data Analytics application, describes the
/// record format and relevant mapping information that should be applied
/// to schematize the records on the stream.
class RecordFormat {
    /// The type of record format.
    RecordFormatType: "CSV" | "JSON"
    /// When you configure application input at the time of creating or
    /// updating an application, provides additional mapping information
    /// specific to the record format (such as JSON, CSV, or record fields
    /// delimited by some delimiter) on the streaming source.
    MappingParameters: MappingParameters?
}
/// When you configure a SQL-based Kinesis Data Analytics application's
/// input at the time of creating or updating an application, provides
/// additional mapping information specific to the record format (such as
/// JSON, CSV, or record fields delimited by some delimiter) on the
/// streaming source.
class MappingParameters {
    /// Provides additional mapping information when the record format uses
    /// delimiters (for example, CSV).
    CSVMappingParameters: CSVMappingParameters?
    /// Provides additional mapping information when JSON is the record format
    /// on the streaming source.
    JSONMappingParameters: JSONMappingParameters?
}
/// For a SQL-based Kinesis Data Analytics application, provides
/// additional mapping information when the record format uses delimiters,
/// such as CSV. For example, the following sample records use CSV format,
/// where the records use the '\n' as the row delimiter and a comma (",")
/// as the column delimiter: `"name1", "address1"` `"name2", "address2"`
class CSVMappingParameters {
    /// The column delimiter. For example, in a CSV format, a comma (",") is
    /// the typical column delimiter.
    RecordColumnDelimiter: String(length <= 1024 && length >= 1)
    /// The row delimiter. For example, in a CSV format, '\n' is the typical
    /// row delimiter.
    RecordRowDelimiter: String(length <= 1024 && length >= 1)
}
/// For a SQL-based Kinesis Data Analytics application, provides
/// additional mapping information when JSON is the record format on the
/// streaming source.
class JSONMappingParameters {
    /// The path to the top-level parent that contains the records.
    RecordRowPath: String(length <= 65535 && length >= 1 && matches(Regex(#"^(?=^\$)(?=^\S+$).*$"#)))
}
/// Identifies a Kinesis data stream as the streaming source. You provide
/// the stream's Amazon Resource Name (ARN).
class KinesisStreamsInput {
    /// The ARN of the input Kinesis data stream to read.
    ResourceARN: String(length <= 2048 && length >= 1 && matches(Regex(#"^arn:.*$"#)))
}
/// For a SQL-based Kinesis Data Analytics application, identifies a
/// Kinesis Data Firehose delivery stream as the streaming source. You
/// provide the delivery stream's Amazon Resource Name (ARN).
class KinesisFirehoseInput {
    /// The Amazon Resource Name (ARN) of the delivery stream.
    ResourceARN: String(length <= 2048 && length >= 1 && matches(Regex(#"^arn:.*$"#)))
}
/// For an SQL-based Amazon Kinesis Data Analytics application, describes
/// a processor that is used to preprocess the records in the stream
/// before being processed by your application code. Currently, the only
/// input processor available is Amazon Lambda.
class InputProcessingConfiguration {
    /// The InputLambdaProcessor that is used to preprocess the records in the
    /// stream before being processed by your application code.
    InputLambdaProcessor: InputLambdaProcessor?
}
/// An object that contains the Amazon Resource Name (ARN) of the Amazon
/// Lambda function that is used to preprocess records in the stream in a
/// SQL-based Kinesis Data Analytics application.
class InputLambdaProcessor {
    /// The ARN of the Amazon Lambda function that operates on records in the
    /// stream.
    ResourceARN: String(length <= 2048 && length >= 1 && matches(Regex(#"^arn:.*$"#)))
}
/// For a SQL-based Kinesis Data Analytics application, describes the
/// number of in-application streams to create for a given streaming
/// source.
class InputParallelism {
    /// The number of in-application streams to create.
    Count: Int?
}
/// The configuration of a Kinesis Data Analytics Studio notebook.
class ZeppelinApplicationConfiguration {
    /// The Amazon Glue Data Catalog that you use in queries in a Kinesis Data
    /// Analytics Studio notebook.
    CatalogConfiguration: CatalogConfiguration?
    /// The monitoring configuration of a Kinesis Data Analytics Studio
    /// notebook.
    MonitoringConfiguration: ZeppelinMonitoringConfiguration?
    /// The information required to deploy a Kinesis Data Analytics Studio
    /// notebook as an application with durable state.
    DeployAsApplicationConfiguration: DeployAsApplicationConfiguration?
    /// A list of CustomArtifactConfiguration objects.
    CustomArtifactsConfiguration: Listing<CustomArtifactConfiguration>?
}
/// The configuration parameters for the default Amazon Glue database. You
/// use this database for SQL queries that you write in a Kinesis Data
/// Analytics Studio notebook.
class CatalogConfiguration {
    /// The configuration parameters for the default Amazon Glue database. You
    /// use this database for Apache Flink SQL queries and table API
    /// transforms that you write in a Kinesis Data Analytics Studio notebook.
    GlueDataCatalogConfiguration: GlueDataCatalogConfiguration?
}
/// The configuration of the Glue Data Catalog that you use for Apache
/// Flink SQL queries and table API transforms that you write in an
/// application.
class GlueDataCatalogConfiguration {
    /// The Amazon Resource Name (ARN) of the database.
    DatabaseARN: String(length <= 2048 && length >= 1 && matches(Regex(#"^arn:.*$"#)))?
}
/// Describes configuration parameters for Amazon CloudWatch logging for a
/// Kinesis Data Analytics Studio notebook. For more information about
/// CloudWatch logging, see Monitoring.
class ZeppelinMonitoringConfiguration {
    /// The verbosity of the CloudWatch Logs for an application. You can set
    /// it to `INFO`, `WARN`, `ERROR`, or `DEBUG`.
    LogLevel: "DEBUG" | "INFO" | "WARN" | "ERROR" | *Null
}
/// The information required to deploy a Kinesis Data Analytics Studio
/// notebook as an application with durable state.
class DeployAsApplicationConfiguration {
    /// The description of an Amazon S3 object that contains the Amazon Data
    /// Analytics application, including the Amazon Resource Name (ARN) of the
    /// S3 bucket, the name of the Amazon S3 object that contains the data,
    /// and the version number of the Amazon S3 object that contains the data.
    S3ContentLocation: S3ContentBaseLocation
}
/// The base location of the Amazon Data Analytics application.
class S3ContentBaseLocation {
    /// The Amazon Resource Name (ARN) of the S3 bucket.
    BucketARN: String(length <= 2048 && length >= 1 && matches(Regex(#"^arn:.*$"#)))
    /// The base path for the S3 bucket.
    BasePath: String(length <= 1024 && length >= 1 && matches(Regex(#"^[a-zA-Z0-9/!-_.*'()]+$"#)))?
}
/// The configuration of connectors and user-defined functions.
class CustomArtifactConfiguration {
    /// Set this to either `UDF` or `DEPENDENCY_JAR`. `UDF` stands for user-
    /// defined functions. This type of artifact must be in an S3 bucket. A
    /// `DEPENDENCY_JAR` can be in either Maven or an S3 bucket.
    ArtifactType: "DEPENDENCY_JAR" | "UDF"
    /// The parameters required to fully specify a Maven reference.
    MavenReference: MavenReference?
    /// The location of the custom artifacts.
    S3ContentLocation: S3ContentLocation?
}
/// The information required to specify a Maven reference. You can use
/// Maven references to specify dependency JAR files.
class MavenReference {
    /// The artifact ID of the Maven reference.
    ArtifactId: String(length <= 256 && length >= 1 && matches(Regex(#"^[a-zA-Z0-9_.-]+$"#)))
    /// The group ID of the Maven reference.
    GroupId: String(length <= 256 && length >= 1 && matches(Regex(#"^[a-zA-Z0-9_.-]+$"#)))
    /// The version of the Maven reference.
    Version: String(length <= 256 && length >= 1 && matches(Regex(#"^[a-zA-Z0-9_.-]+$"#)))
}
/// Describes the parameters of a VPC used by the application.
class VpcConfiguration {
    /// The array of SecurityGroup IDs used by the VPC configuration.
    SecurityGroupIds: Listing<String>
    /// The array of Subnet IDs used by the VPC configuration.
    SubnetIds: Listing<String>
}
/// Identifies the run configuration (start parameters) of a Kinesis Data
/// Analytics application. This section is evaluated only on stack updates
/// for applications in running RUNNING state and has no effect during
/// manual application start.
class RunConfiguration {
    /// Describes the restore behavior of a restarting application.
    ApplicationRestoreConfiguration: ApplicationRestoreConfiguration?
    /// Describes the starting parameters for a Flink-based Kinesis Data
    /// Analytics application.
    FlinkRunConfiguration: FlinkRunConfiguration?
}
/// Describes the restore behavior of a restarting application.
class ApplicationRestoreConfiguration {
    /// Specifies how the application should be restored.
    ApplicationRestoreType: "SKIP_RESTORE_FROM_SNAPSHOT" | "RESTORE_FROM_LATEST_SNAPSHOT" | "RESTORE_FROM_CUSTOM_SNAPSHOT"
    /// The identifier of an existing snapshot of application state to use to
    /// restart an application. The application uses this value if
    /// RESTORE_FROM_CUSTOM_SNAPSHOT is specified for the
    /// ApplicationRestoreType.
    SnapshotName: String(length <= 256 && length >= 1 && matches(Regex(#"^[a-zA-Z0-9_.-]+$"#)))?
}
/// Describes the starting parameters for a Flink-based Kinesis Data
/// Analytics application.
class FlinkRunConfiguration {
    /// When restoring from a snapshot, specifies whether the runtime is
    /// allowed to skip a state that cannot be mapped to the new program.
    /// Defaults to false. If you update your application without specifying
    /// this parameter, AllowNonRestoredState will be set to false, even if it
    /// was previously set to true.
    AllowNonRestoredState: Boolean?
}
/// Describes the maintenance configuration for the application.
class ApplicationMaintenanceConfiguration {
    /// The start time for the maintenance window.
    ApplicationMaintenanceWindowStartTime: String(matches(Regex(#"^([01][0-9]|2[0-3]):[0-5][0-9]$"#)))
}
/// A key-value pair that identifies an application.
class Tag {
    /// The key name of the tag. You can specify a value that's 1 to 128
    /// Unicode characters in length and can't be prefixed with aws:. You can
    /// use any of the following characters: the set of Unicode letters,
    /// digits, whitespace, _, ., /, =, +, and -.
    Key: String(length <= 128 && length >= 1)
    /// The value for the tag. You can specify a value that's 0 to 256
    /// characters in length.
    Value: String(length <= 256 && length >= 0)
}
