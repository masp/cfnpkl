/// Resource schema for AWS::EMRServerless::Application Type
extends ".../AWS/Resource.pkl"
Type = "AWS::EMRServerless::Application"
Properties: Props?
class Props {
    Architecture: "ARM64" | "X86_64" | *Null
    /// User friendly Application name.
    Name: String(length <= 64 && length >= 1 && matches(Regex(#"^[A-Za-z0-9._\/#-]+$"#)))?
    /// EMR release label.
    ReleaseLabel: String(length <= 64 && length >= 1 && matches(Regex(#"^[A-Za-z0-9._/-]+$"#)))?
    /// The type of the application
    Type: String?
    /// Initial capacity initialized when an Application is started.
    InitialCapacity: Listing<InitialCapacityConfigKeyValuePair>?
    /// Maximum allowed cumulative resources for an Application. No new
    /// resources will be created once the limit is hit.
    MaximumCapacity: MaximumAllowedResources?
    /// Tag map with key and value
    Tags: Listing<Tag>?
    /// Configuration for Auto Start of Application.
    AutoStartConfiguration: AutoStartConfiguration?
    /// Configuration for Auto Stop of Application.
    AutoStopConfiguration: AutoStopConfiguration?
    ImageConfiguration: ImageConfigurationInput?
    MonitoringConfiguration: MonitoringConfiguration?
    RuntimeConfiguration: Listing<ConfigurationObject>?
    /// Network Configuration for customer VPC connectivity.
    NetworkConfiguration: NetworkConfiguration?
    /// The Amazon Resource Name (ARN) of the EMR Serverless Application.
    Arn: String?
    /// The ID of the EMR Serverless Application.
    ApplicationId: String(length <= 64 && length >= 1)?
    /// The key-value pairs that specify worker type to
    /// WorkerTypeSpecificationInput. This parameter must contain all valid
    /// worker types for a Spark or Hive application. Valid worker types
    /// include Driver and Executor for Spark applications and HiveDriver and
    /// TezTask for Hive applications. You can either set image details in
    /// this parameter for each worker type, or in imageConfiguration for all
    /// worker types.
    WorkerTypeSpecifications: Mapping?
}
class InitialCapacityConfigKeyValuePair {
    /// Worker type for an analytics framework.
    Key: String(length <= 50 && length >= 1 && matches(Regex(#"^[a-zA-Z]+[-_]*[a-zA-Z]+$"#)))
    Value: InitialCapacityConfig
}
class InitialCapacityConfig {
    /// Initial count of workers to be initialized when an Application is
    /// started. This count will be continued to be maintained until the
    /// Application is stopped
    WorkerCount: Int
    WorkerConfiguration: WorkerConfiguration
}
class WorkerConfiguration {
    /// Per worker CPU resource. vCPU is the only supported unit and
    /// specifying vCPU is optional.
    Cpu: String(length <= 15 && length >= 1 && matches(Regex(#"^[1-9][0-9]*(\s)?(vCPU|vcpu|VCPU)?$"#)))
    /// Per worker memory resource. GB is the only supported unit and
    /// specifying GB is optional.
    Memory: String(length <= 15 && length >= 1 && matches(Regex(#"^[1-9][0-9]*(\s)?(GB|gb|gB|Gb)?$"#)))
    /// Per worker Disk resource. GB is the only supported unit and specifying
    /// GB is optional
    Disk: String(length <= 15 && length >= 1 && matches(Regex(#"^[1-9][0-9]*(\s)?(GB|gb|gB|Gb)$"#)))?
}
class MaximumAllowedResources {
    /// Per worker CPU resource. vCPU is the only supported unit and
    /// specifying vCPU is optional.
    Cpu: String(length <= 15 && length >= 1 && matches(Regex(#"^[1-9][0-9]*(\s)?(vCPU|vcpu|VCPU)?$"#)))
    /// Per worker memory resource. GB is the only supported unit and
    /// specifying GB is optional.
    Memory: String(length <= 15 && length >= 1 && matches(Regex(#"^[1-9][0-9]*(\s)?(GB|gb|gB|Gb)?$"#)))
    /// Per worker Disk resource. GB is the only supported unit and specifying
    /// GB is optional
    Disk: String(length <= 15 && length >= 1 && matches(Regex(#"^[1-9][0-9]*(\s)?(GB|gb|gB|Gb)$"#)))?
}
/// A key-value pair to associate with a resource.
class Tag {
    /// The value for the tag. You can specify a value that is 1 to 128
    /// Unicode characters in length. You can use any of the following
    /// characters: the set of Unicode letters, digits, whitespace, _, ., /,
    /// =, +, and -.
    Key: String(length <= 128 && length >= 1 && matches(Regex(#"^[A-Za-z0-9 /_.:=+@-]+$"#)))
    /// The value for the tag. You can specify a value that is 0 to 256
    /// Unicode characters in length. You can use any of the following
    /// characters: the set of Unicode letters, digits, whitespace, _, ., /,
    /// =, +, and -.
    Value: String(length <= 256 && length >= 0 && matches(Regex(#"^[A-Za-z0-9 /_.:=+@-]*$"#)))
}
/// Configuration for Auto Start of Application
class AutoStartConfiguration {
    /// If set to true, the Application will automatically start. Defaults to
    /// true.
    Enabled: Boolean?
}
/// Configuration for Auto Stop of Application
class AutoStopConfiguration {
    /// If set to true, the Application will automatically stop after being
    /// idle. Defaults to true.
    Enabled: Boolean?
    /// The amount of time [in minutes] to wait before auto stopping the
    /// Application when idle. Defaults to 15 minutes.
    IdleTimeoutMinutes: Int?
}
/// The image configuration.
class ImageConfigurationInput {
    /// The URI of an image in the Amazon ECR registry. This field is required
    /// when you create a new application. If you leave this field blank in an
    /// update, Amazon EMR will remove the image configuration.
    ImageUri: String(length <= 1024 && length >= 1 && matches(Regex(#"^([a-z0-9]+[a-z0-9-.]*)\/((?:[a-z0-9]+(?:[._-][a-z0-9]+)*\/)*[a-z0-9]+(?:[._-][a-z0-9]+)*)(?:\:([a-zA-Z0-9_][a-zA-Z0-9-._]{0,299})|@(sha256:[0-9a-f]{64}))$"#)))?
}
/// Monitoring configuration for batch and interactive JobRun.
class MonitoringConfiguration {
    /// S3 monitoring configurations for a JobRun.
    S3MonitoringConfiguration: S3MonitoringConfiguration?
    /// Managed log persistence configurations for a JobRun.
    ManagedPersistenceMonitoringConfiguration: ManagedPersistenceMonitoringConfiguration?
    /// CloudWatch logging configurations for a JobRun.
    CloudWatchLoggingConfiguration: CloudWatchLoggingConfiguration?
}
class S3MonitoringConfiguration {
    LogUri: String(length <= 10280 && length >= 1 && matches(Regex(#"[\u0020-\uD7FF\uE000-\uFFFD\uD800\uDBFF-\uDC00\uDFFF\r\n\t]*"#)))?
    /// KMS key ARN to encrypt the logs stored in given s3
    EncryptionKeyArn: String(length <= 2048 && length >= 20 && matches(Regex(#"^arn:(aws[a-zA-Z0-9-]*):kms:[a-zA-Z0-9\-]*:(\d{12})?:key\/[a-zA-Z0-9-]+$"#)))?
}
class ManagedPersistenceMonitoringConfiguration {
    /// If set to false, managed logging will be turned off. Defaults to true.
    Enabled: Boolean?
    /// KMS key ARN to encrypt the logs stored in managed persistence
    EncryptionKeyArn: String(length <= 2048 && length >= 20 && matches(Regex(#"^arn:(aws[a-zA-Z0-9-]*):kms:[a-zA-Z0-9\-]*:(\d{12})?:key\/[a-zA-Z0-9-]+$"#)))?
}
class CloudWatchLoggingConfiguration {
    /// If set to false, CloudWatch logging will be turned off. Defaults to
    /// false.
    Enabled: Boolean?
    /// Log-group name to produce log-streams on CloudWatch. If undefined,
    /// logs will be produced in a default log-group /aws/emr-serverless
    LogGroupName: String(length <= 512 && length >= 1 && matches(Regex(#"^[\.\-_/#A-Za-z0-9]+$"#)))?
    /// Log-stream name prefix by which log-stream names will start in the
    /// CloudWatch Log-group.
    LogStreamNamePrefix: String(length <= 512 && length >= 1 && matches(Regex(#"^[^:*]*$"#)))?
    /// KMS key ARN to encrypt the logs stored in given CloudWatch log-group.
    EncryptionKeyArn: String(length <= 2048 && length >= 20 && matches(Regex(#"^arn:(aws[a-zA-Z0-9-]*):kms:[a-zA-Z0-9\-]*:(\d{12})?:key\/[a-zA-Z0-9-]+$"#)))?
    /// The specific log-streams which need to be uploaded to CloudWatch.
    LogTypeMap: Listing<LogTypeMapKeyValuePair>?
}
class LogTypeMapKeyValuePair {
    Key: String(length <= 50 && length >= 1 && matches(Regex(#"^[a-zA-Z]+[-_]*[a-zA-Z]+$"#)))
    Value: Listing<String(length <= 50 && length >= 1 && matches(Regex(#"^[a-zA-Z]+[-_]*[a-zA-Z]+$"#)))>
}
/// Configuration for a JobRun.
class ConfigurationObject {
    /// String with a maximum length of 1024.
    Classification: String(length <= 1024 && length >= 1 && matches(Regex(#".*\S.*"#)))
    Properties: Mapping?
    Configurations: Listing<ConfigurationObject>?
}
class NetworkConfiguration {
    /// The ID of the subnets in the VPC to which you want to connect your job
    /// or application.
    SubnetIds: Listing<String(length <= 32 && length >= 1 && matches(Regex(#"^[-0-9a-zA-Z]+"#)))>?
    /// The ID of the security groups in the VPC to which you want to connect
    /// your job or application.
    SecurityGroupIds: Listing<String(length <= 32 && length >= 1 && matches(Regex(#"^[-0-9a-zA-Z]+"#)))>?
}
