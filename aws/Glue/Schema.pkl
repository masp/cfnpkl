/// This resource represents a schema of Glue Schema Registry.
extends ".../AWS/Resource.pkl"
Type = "AWS::Glue::Schema"
Properties: Props?
class Props {
    /// Amazon Resource Name for the Schema.
    Arn: String(matches(Regex(#"arn:aws(-(cn|us-gov|iso(-[bef])?))?:glue:.*"#)))?
    Registry: Registry?
    /// Name of the schema.
    Name: String(length <= 255 && length >= 1)?
    /// A description of the schema. If description is not provided, there
    /// will not be any default value for this.
    Description: String(length <= 1000 && length >= 0)?
    /// Data format name to use for the schema. Accepted values: 'AVRO',
    /// 'JSON', 'PROTOBUF'
    DataFormat: "AVRO" | "JSON" | "PROTOBUF" | *Null
    /// Compatibility setting for the schema.
    Compatibility: "NONE" | "DISABLED" | "BACKWARD" | "BACKWARD_ALL" | "FORWARD" | "FORWARD_ALL" | "FULL" | "FULL_ALL" | *Null
    /// Definition for the initial schema version in plain-text.
    SchemaDefinition: String(length <= 170000 && length >= 1)?
    CheckpointVersion: SchemaVersion?
    /// List of tags to tag the schema
    Tags: Listing<Tag>?
    /// Represents the version ID associated with the initial schema version.
    InitialSchemaVersionId: String(matches(Regex(#"[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}"#)))?
}
/// Identifier for the registry which the schema is part of.
class Registry {
    /// Name of the registry in which the schema will be created.
    Name: String(length <= 255 && length >= 1)?
    /// Amazon Resource Name for the Registry.
    Arn: String(matches(Regex(#"arn:aws(-(cn|us-gov|iso(-[bef])?))?:glue:.*"#)))?
}
/// Specify checkpoint version for update. This is only required to update
/// the Compatibility.
class SchemaVersion {
    /// Indicates if the latest version needs to be updated.
    IsLatest: Boolean?
    /// Indicates the version number in the schema to update.
    VersionNumber: Int?
}
class Tag {
    /// A key to identify the tag.
    Key: String(length <= 128 && length >= 1)
    /// Corresponding tag value for the key.
    Value: String(length <= 256 && length >= 0)
}
