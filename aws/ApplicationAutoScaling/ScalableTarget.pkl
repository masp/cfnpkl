/// Resource Type definition for
/// AWS::ApplicationAutoScaling::ScalableTarget
extends ".../AWS/Resource.pkl"
Type = "AWS::ApplicationAutoScaling::ScalableTarget"
Properties: Props?
class Props {
    /// This value can be returned by using the Ref function. Ref returns the
    /// Cloudformation generated ID of the resource in format -
    /// ResourceId|ScalableDimension|ServiceNamespace
    Id: String?
    /// The maximum value that you plan to scale in to. When a scaling policy
    /// is in effect, Application Auto Scaling can scale in (contract) as
    /// needed to the minimum capacity limit in response to changing demand
    MaxCapacity: Int?
    /// The minimum value that you plan to scale in to. When a scaling policy
    /// is in effect, Application Auto Scaling can scale in (contract) as
    /// needed to the minimum capacity limit in response to changing demand
    MinCapacity: Int?
    /// The identifier of the resource associated with the scalable target
    ResourceId: String?
    /// Specify the Amazon Resource Name (ARN) of an Identity and Access
    /// Management (IAM) role that allows Application Auto Scaling to modify
    /// the scalable target on your behalf.
    RoleARN: String?
    /// The scalable dimension associated with the scalable target. This
    /// string consists of the service namespace, resource type, and scaling
    /// property
    ScalableDimension: String?
    /// The scheduled actions for the scalable target. Duplicates aren't
    /// allowed.
    ScheduledActions: Listing<ScheduledAction>?
    /// The namespace of the AWS service that provides the resource, or a
    /// custom-resource
    ServiceNamespace: String?
    /// An embedded object that contains attributes and attribute values that
    /// are used to suspend and resume automatic scaling. Setting the value of
    /// an attribute to true suspends the specified scaling activities.
    /// Setting it to false (default) resumes the specified scaling
    /// activities.
    SuspendedState: SuspendedState?
}
/// specifies a scheduled action for a scalable target
class ScheduledAction {
    Timezone: String?
    ScheduledActionName: String
    EndTime: String?
    Schedule: String
    StartTime: String?
    ScalableTargetAction: ScalableTargetAction?
}
/// specifies the minimum and maximum capacity
class ScalableTargetAction {
    MinCapacity: Int?
    MaxCapacity: Int?
}
/// specifies whether the scaling activities for a scalable target are in
/// a suspended state
class SuspendedState {
    ScheduledScalingSuspended: Boolean?
    DynamicScalingOutSuspended: Boolean?
    DynamicScalingInSuspended: Boolean?
}
