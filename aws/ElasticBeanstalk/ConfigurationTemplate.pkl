/// Resource Type definition for
/// AWS::ElasticBeanstalk::ConfigurationTemplate
extends ".../AWS/Resource.pkl"
Type = "AWS::ElasticBeanstalk::ConfigurationTemplate"
Properties: Props?
class Props {
    /// The name of the Elastic Beanstalk application to associate with this
    /// configuration template.
    ApplicationName: String?
    /// An optional description for this configuration.
    Description: String?
    /// The ID of an environment whose settings you want to use to create the
    /// configuration template. You must specify EnvironmentId if you don't
    /// specify PlatformArn, SolutionStackName, or SourceConfiguration.
    EnvironmentId: String?
    /// Option values for the Elastic Beanstalk configuration, such as the
    /// instance type. If specified, these values override the values obtained
    /// from the solution stack or the source configuration template. For a
    /// complete list of Elastic Beanstalk configuration options, see [Option 
    /// Values](https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/command
    /// -options.html) in the AWS Elastic Beanstalk Developer Guide.
    OptionSettings: Listing<ConfigurationOptionSetting>?
    /// The Amazon Resource Name (ARN) of the custom platform. For more
    /// information, see [Custom Platforms](https://docs.aws.amazon.com/elasti
    /// cbeanstalk/latest/dg/custom-platforms.html) in the AWS Elastic
    /// Beanstalk Developer Guide.
    PlatformArn: String?
    /// The name of an Elastic Beanstalk solution stack (platform version)
    /// that this configuration uses. For example, 64bit Amazon Linux 2013.09
    /// running Tomcat 7 Java 7. A solution stack specifies the operating
    /// system, runtime, and application server for a configuration template.
    /// It also determines the set of configuration options as well as the
    /// possible and default values. For more information, see [Supported Plat
    /// forms](https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/concepts
    /// .platforms.html) in the AWS Elastic Beanstalk Developer Guide.   You
    /// must specify SolutionStackName if you don't specify PlatformArn,
    /// EnvironmentId, or SourceConfiguration.   Use the
    /// ListAvailableSolutionStacks API to obtain a list of available solution
    /// stacks.
    SolutionStackName: String?
    /// An Elastic Beanstalk configuration template to base this one on. If
    /// specified, Elastic Beanstalk uses the configuration values from the
    /// specified configuration template to create a new configuration.
    /// Values specified in OptionSettings override any values obtained from
    /// the SourceConfiguration.  You must specify SourceConfiguration if you
    /// don't specify PlatformArn, EnvironmentId, or SolutionStackName.
    /// Constraint: If both solution stack name and source configuration are
    /// specified, the solution stack of the source configuration template
    /// must match the specified solution stack name.
    SourceConfiguration: SourceConfiguration?
    /// The name of the configuration template
    TemplateName: String?
}
class ConfigurationOptionSetting {
    /// A unique namespace that identifies the option's associated AWS
    /// resource.
    Namespace: String
    /// The name of the configuration option.
    OptionName: String
    /// A unique resource name for the option setting. Use it for a timeâ€“based
    /// scaling configuration option.
    ResourceName: String?
    /// The current value for the configuration option.
    Value: String?
}
class SourceConfiguration {
    /// The name of the application associated with the configuration.
    ApplicationName: String
    /// The name of the configuration template.
    TemplateName: String
}
