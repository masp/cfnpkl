/// The AWS::Rekognition::StreamProcessor type is used to create an Amazon
/// Rekognition StreamProcessor that you can use to analyze streaming
/// videos.
extends ".../AWS/Resource.pkl"
Type = "AWS::Rekognition::StreamProcessor"
Properties: Props?
class Props {
    Arn: String(length <= 2048)?
    /// Name of the stream processor. It's an identifier you assign to the
    /// stream processor. You can use it to manage the stream processor.
    Name: String(length <= 128 && length >= 1 && matches(Regex(#"[a-zA-Z0-9_.\-]+"#)))?
    /// The KMS key that is used by Rekognition to encrypt any intermediate
    /// customer metadata and store in the customer's S3 bucket.
    KmsKeyId: String?
    /// ARN of the IAM role that allows access to the stream processor, and
    /// provides Rekognition read permissions for KVS stream and write
    /// permissions to S3 bucket and SNS topic.
    RoleArn: String(length <= 2048 && matches(Regex(#"arn:aws(-[\w]+)*:iam::[0-9]{12}:role/.*"#)))?
    KinesisVideoStream: KinesisVideoStream?
    FaceSearchSettings: FaceSearchSettings?
    ConnectedHomeSettings: ConnectedHomeSettings?
    KinesisDataStream: KinesisDataStream?
    S3Destination: S3Destination?
    NotificationChannel: NotificationChannel?
    DataSharingPreference: DataSharingPreference?
    /// The PolygonRegionsOfInterest specifies a set of polygon areas of
    /// interest in the video frames to analyze, as part of connected home
    /// feature. Each polygon is in turn, an ordered list of Point
    PolygonRegionsOfInterest: Listing<Listing<Point>>?
    /// The BoundingBoxRegionsOfInterest specifies an array of bounding boxes
    /// of interest in the video frames to analyze, as part of connected home
    /// feature. If an object is partially in a region of interest,
    /// Rekognition will tag it as detected if the overlap of the object with
    /// the region-of-interest is greater than 20%.
    BoundingBoxRegionsOfInterest: Listing<BoundingBox>?
    /// Current status of the stream processor.
    Status: String?
    /// Detailed status message about the stream processor.
    StatusMessage: String?
    /// An array of key-value pairs to apply to this resource.
    Tags: Listing<Tag>?
}
/// The Kinesis Video Stream that streams the source video.
class KinesisVideoStream {
    /// ARN of the Kinesis Video Stream that streams the source video.
    Arn: String(length <= 2048 && matches(Regex(#"(^arn:([a-z\d-]+):kinesisvideo:([a-z\d-]+):\d{12}:.+$)"#)))
}
/// Face search settings to use on a streaming video. Note that either
/// FaceSearchSettings or ConnectedHomeSettings should be set. Not both
class FaceSearchSettings {
    /// The ID of a collection that contains faces that you want to search
    /// for.
    CollectionId: String(length <= 255 && matches(Regex(#"\A[a-zA-Z0-9_\.\-]+$"#)))
    /// Minimum face match confidence score percentage that must be met to
    /// return a result for a recognized face. The default is 80. 0 is the
    /// lowest confidence. 100 is the highest confidence. Values between 0 and
    /// 100 are accepted.
    FaceMatchThreshold: Float?
}
/// Connected home settings to use on a streaming video. Note that either
/// ConnectedHomeSettings or FaceSearchSettings should be set. Not both
class ConnectedHomeSettings {
    Labels: Listing<String(length <= 128 && length >= 1)>
    /// Minimum object class match confidence score that must be met to return
    /// a result for a recognized object.
    MinConfidence: Float?
}
/// The Amazon Kinesis Data Stream stream to which the Amazon Rekognition
/// stream processor streams the analysis results, as part of face search
/// feature.
class KinesisDataStream {
    /// ARN of the Kinesis Data Stream stream.
    Arn: String(length <= 2048 && matches(Regex(#"(^arn:([a-z\d-]+):kinesis:([a-z\d-]+):\d{12}:.+$)"#)))
}
/// The S3 location in customer's account where inference output &
/// artifacts are stored, as part of connected home feature.
class S3Destination {
    /// Name of the S3 bucket.
    BucketName: String(length <= 63)
    /// The object key prefix path where the results will be stored. Default
    /// is no prefix path
    ObjectKeyPrefix: String(length <= 256)?
}
/// The ARN of the SNS notification channel where events of interests are
/// published, as part of connected home feature.
class NotificationChannel {
    /// ARN of the SNS topic.
    Arn: String(length <= 2048)
}
/// Indicates whether Rekognition is allowed to store the video stream
/// data for model-training.
class DataSharingPreference {
    /// Flag to enable data-sharing
    OptIn: Boolean
}
/// An (X, Y) cartesian coordinate denoting a point on the frame
class Point {
    /// The X coordinate of the point.
    X: Float
    /// The Y coordinate of the point.
    Y: Float
}
/// A bounding box denoting a region of interest in the frame to be
/// analyzed.
class BoundingBox {
    Height: Float
    Width: Float
    Left: Float
    Top: Float
}
/// A key-value pair to associate with a resource.
class Tag {
    /// The key name of the tag. You can specify a value that is 1 to 128
    /// Unicode characters in length and cannot be prefixed with aws:. You can
    /// use any of the following characters: the set of Unicode letters,
    /// digits, whitespace, _, ., /, =, +, and -.
    Key: String(length <= 128 && length >= 1 && matches(Regex(#"\A(?!aws:)[a-zA-Z0-9+\-=\._\:\/@]+$"#)))
    /// The value for the tag. You can specify a value that is 0 to 256
    /// Unicode characters in length and cannot be prefixed with aws:. You can
    /// use any of the following characters: the set of Unicode letters,
    /// digits, whitespace, _, ., /, =, +, and -.
    Value: String(length <= 256 && length >= 0 && matches(Regex(#"\A[a-zA-Z0-9+\-=\._\:\/@]+$"#)))
}
