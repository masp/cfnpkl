/// The AWS::EC2::VerifiedAccessEndpoint resource creates an AWS EC2
/// Verified Access Endpoint.
extends ".../AWS/Resource.pkl"
Type = "AWS::EC2::VerifiedAccessEndpoint"
Properties: Props?
class Props {
    /// The ID of the AWS Verified Access endpoint.
    VerifiedAccessEndpointId: String?
    /// The ID of the AWS Verified Access group.
    VerifiedAccessGroupId: String?
    /// The ID of the AWS Verified Access instance.
    VerifiedAccessInstanceId: String?
    /// The endpoint status.
    Status: String?
    /// The IDs of the security groups for the endpoint.
    SecurityGroupIds: Listing<String>?
    /// The options for network-interface type endpoint.
    NetworkInterfaceOptions: NetworkInterfaceOptions?
    /// The load balancer details if creating the AWS Verified Access endpoint
    /// as load-balancer type.
    LoadBalancerOptions: LoadBalancerOptions?
    /// The type of AWS Verified Access endpoint. Incoming application
    /// requests will be sent to an IP address, load balancer or a network
    /// interface depending on the endpoint type specified.The type of AWS
    /// Verified Access endpoint. Incoming application requests will be sent
    /// to an IP address, load balancer or a network interface depending on
    /// the endpoint type specified.
    EndpointType: String?
    /// A DNS name that is generated for the endpoint.
    EndpointDomain: String?
    /// A custom identifier that gets prepended to a DNS name that is
    /// generated for the endpoint.
    EndpointDomainPrefix: String?
    /// Returned if endpoint has a device trust provider attached.
    DeviceValidationDomain: String?
    /// The ARN of a public TLS/SSL certificate imported into or created with
    /// ACM.
    DomainCertificateArn: String?
    /// The type of attachment used to provide connectivity between the AWS
    /// Verified Access endpoint and the application.
    AttachmentType: String?
    /// The DNS name for users to reach your application.
    ApplicationDomain: String?
    /// The creation time.
    CreationTime: String?
    /// The last updated time.
    LastUpdatedTime: String?
    /// A description for the AWS Verified Access endpoint.
    Description: String?
    /// The AWS Verified Access policy document.
    PolicyDocument: String?
    /// The status of the Verified Access policy.
    PolicyEnabled: Boolean?
    /// An array of key-value pairs to apply to this resource.
    Tags: Listing<Tag>?
    /// The configuration options for customer provided KMS encryption.
    SseSpecification: SseSpecification?
}
/// The options for network-interface type endpoint.
class NetworkInterfaceOptions {
    /// The ID of the network interface.
    NetworkInterfaceId: String?
    /// The IP port number.
    Port: Int?
    /// The IP protocol.
    Protocol: String?
}
/// The load balancer details if creating the AWS Verified Access endpoint
/// as load-balancertype.
class LoadBalancerOptions {
    /// The ARN of the load balancer.
    LoadBalancerArn: String?
    /// The IP port number.
    Port: Int?
    /// The IP protocol.
    Protocol: String?
    /// The IDs of the subnets.
    SubnetIds: Listing<String>?
}
/// A key-value pair to associate with a resource.
class Tag {
    /// The key name of the tag. You can specify a value that is 1 to 128
    /// Unicode characters in length and cannot be prefixed with aws:. You can
    /// use any of the following characters: the set of Unicode letters,
    /// digits, whitespace, _, ., /, =, +, and -.
    Key: String(length <= 128 && length >= 1)
    /// The value for the tag. You can specify a value that is 0 to 256
    /// Unicode characters in length and cannot be prefixed with aws:. You can
    /// use any of the following characters: the set of Unicode letters,
    /// digits, whitespace, _, ., /, =, +, and -.
    Value: String(length <= 256 && length >= 0)
}
/// The configuration options for customer provided KMS encryption.
class SseSpecification {
    /// KMS Key Arn used to encrypt the group policy
    KmsKeyArn: String?
    /// Whether to encrypt the policy with the provided key or disable
    /// encryption
    CustomerManagedKeyEnabled: Boolean?
}
