/// The AWS::EC2::NetworkInterface resource creates network interface
extends ".../AWS/Resource.pkl"
Type = "AWS::EC2::NetworkInterface"
Properties: Props?
class Props {
    /// A description for the network interface.
    Description: String?
    /// Assigns a single private IP address to the network interface, which is
    /// used as the primary private IP address. If you want to specify
    /// multiple private IP address, use the PrivateIpAddresses property.
    PrivateIpAddress: String?
    /// Assigns a list of private IP addresses to the network interface. You
    /// can specify a primary private IP address by setting the value of the
    /// Primary property to true in the PrivateIpAddressSpecification
    /// property. If you want EC2 to automatically assign private IP
    /// addresses, use the SecondaryPrivateIpAddressCount property and do not
    /// specify this property.
    PrivateIpAddresses: Listing<PrivateIpAddressSpecification>?
    /// The number of secondary private IPv4 addresses to assign to a network
    /// interface. When you specify a number of secondary IPv4 addresses,
    /// Amazon EC2 selects these IP addresses within the subnet's IPv4 CIDR
    /// range. You can't specify this option and specify more than one private
    /// IP address using privateIpAddresses
    SecondaryPrivateIpAddressCount: Int?
    /// Returns the primary private IP address of the network interface.
    PrimaryPrivateIpAddress: String?
    /// Assigns a list of IPv4 prefixes to the network interface. If you want
    /// EC2 to automatically assign IPv4 prefixes, use the Ipv4PrefixCount
    /// property and do not specify this property. Presently, only /28
    /// prefixes are supported. You can't specify IPv4 prefixes if you've
    /// specified one of the following: a count of IPv4 prefixes, specific
    /// private IPv4 addresses, or a count of private IPv4 addresses.
    Ipv4Prefixes: Listing<Ipv4PrefixSpecification>?
    /// The number of IPv4 prefixes to assign to a network interface. When you
    /// specify a number of IPv4 prefixes, Amazon EC2 selects these prefixes
    /// from your existing subnet CIDR reservations, if available, or from
    /// free spaces in the subnet. By default, these will be /28 prefixes. You
    /// can't specify a count of IPv4 prefixes if you've specified one of the
    /// following: specific IPv4 prefixes, specific private IPv4 addresses, or
    /// a count of private IPv4 addresses.
    Ipv4PrefixCount: Int?
    /// A list of security group IDs associated with this network interface.
    GroupSet: Listing<String>?
    /// One or more specific IPv6 addresses from the IPv6 CIDR block range of
    /// your subnet to associate with the network interface. If you're
    /// specifying a number of IPv6 addresses, use the Ipv6AddressCount
    /// property and don't specify this property.
    Ipv6Addresses: Listing<InstanceIpv6Address>?
    /// Assigns a list of IPv6 prefixes to the network interface. If you want
    /// EC2 to automatically assign IPv6 prefixes, use the Ipv6PrefixCount
    /// property and do not specify this property. Presently, only /80
    /// prefixes are supported. You can't specify IPv6 prefixes if you've
    /// specified one of the following: a count of IPv6 prefixes, specific
    /// IPv6 addresses, or a count of IPv6 addresses.
    Ipv6Prefixes: Listing<Ipv6PrefixSpecification>?
    /// The number of IPv6 prefixes to assign to a network interface. When you
    /// specify a number of IPv6 prefixes, Amazon EC2 selects these prefixes
    /// from your existing subnet CIDR reservations, if available, or from
    /// free spaces in the subnet. By default, these will be /80 prefixes. You
    /// can't specify a count of IPv6 prefixes if you've specified one of the
    /// following: specific IPv6 prefixes, specific IPv6 addresses, or a count
    /// of IPv6 addresses.
    Ipv6PrefixCount: Int?
    /// The ID of the subnet to associate with the network interface.
    SubnetId: String?
    /// Indicates whether traffic to or from the instance is validated.
    SourceDestCheck: Boolean?
    /// Indicates the type of network interface.
    InterfaceType: String?
    /// Returns the secondary private IP addresses of the network interface.
    SecondaryPrivateIpAddresses: Listing<String>?
    /// The number of IPv6 addresses to assign to a network interface. Amazon
    /// EC2 automatically selects the IPv6 addresses from the subnet range. To
    /// specify specific IPv6 addresses, use the Ipv6Addresses property and
    /// don't specify this property.
    Ipv6AddressCount: Int?
    /// If you have instances or ENIs that rely on the IPv6 address not
    /// changing, to avoid disrupting traffic to instances or ENIs, you can
    /// enable a primary IPv6 address. Enable this option to automatically
    /// assign an IPv6 associated with the ENI attached to your instance to be
    /// the primary IPv6 address. When you enable an IPv6 address to be a
    /// primary IPv6, you cannot disable it. Traffic will be routed to the
    /// primary IPv6 address until the instance is terminated or the ENI is
    /// detached. If you have multiple IPv6 addresses associated with an ENI
    /// and you enable a primary IPv6 address, the first IPv6 address
    /// associated with the ENI becomes the primary IPv6 address.
    EnablePrimaryIpv6: Boolean?
    /// The primary IPv6 address
    PrimaryIpv6Address: String?
    ConnectionTrackingSpecification: ConnectionTrackingSpecification?
    /// Network interface id.
    Id: String?
    /// An arbitrary set of tags (key-value pairs) for this network interface.
    Tags: Listing<Tag>?
}
class PrivateIpAddressSpecification {
    PrivateIpAddress: String
    Primary: Boolean
}
class Ipv4PrefixSpecification {
    Ipv4Prefix: String
}
class InstanceIpv6Address {
    Ipv6Address: String
}
class Ipv6PrefixSpecification {
    Ipv6Prefix: String
}
class ConnectionTrackingSpecification {
    TcpEstablishedTimeout: Int?
    UdpStreamTimeout: Int?
    UdpTimeout: Int?
}
class Tag {
    Value: String
    Key: String
}
