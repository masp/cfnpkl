/// Resource Type definition for AWS::EC2::LaunchTemplate
extends ".../AWS/Resource.pkl"
Type = "AWS::EC2::LaunchTemplate"
Properties: Props?
class Props {
    /// A name for the launch template.
    LaunchTemplateName: String?
    LaunchTemplateData: LaunchTemplateData?
    /// A description for the first version of the launch template.
    VersionDescription: String?
    /// The tags to apply to the launch template on creation.
    TagSpecifications: Listing<LaunchTemplateTagSpecification>?
    /// The latest version of the launch template
    LatestVersionNumber: String?
    /// LaunchTemplate ID generated by service
    LaunchTemplateId: String?
    /// The default version of the launch template
    DefaultVersionNumber: String?
}
/// The information for the launch template.
class LaunchTemplateData {
    /// One or more security group names.
    SecurityGroups: Listing<String>?
    /// The tags to apply to the resources that are created during instance
    /// launch.
    TagSpecifications: Listing<TagSpecification>?
    /// The user data to make available to the instance.
    UserData: String?
    /// The block device mapping.
    BlockDeviceMappings: Listing<BlockDeviceMapping>?
    MaintenanceOptions: MaintenanceOptions?
    IamInstanceProfile: IamInstanceProfile?
    /// The ID of the kernel.
    KernelId: String?
    /// Indicates whether the instance is optimized for Amazon EBS I/O.
    EbsOptimized: Boolean?
    /// An elastic GPU to associate with the instance.
    ElasticGpuSpecifications: Listing<ElasticGpuSpecification>?
    /// The elastic inference accelerator for the instance.
    ElasticInferenceAccelerators: Listing<LaunchTemplateElasticInferenceAccelerator>?
    Placement: Placement?
    /// If you specify a network interface, you must specify any security
    /// groups and subnets as part of the network interface.
    NetworkInterfaces: Listing<NetworkInterface>?
    EnclaveOptions: EnclaveOptions?
    /// The ID of the AMI. Alternatively, you can specify a Systems Manager
    /// parameter, which will resolve to an AMI ID on launch.
    ImageId: String?
    InstanceType: String?
    Monitoring: Monitoring?
    HibernationOptions: HibernationOptions?
    MetadataOptions: MetadataOptions?
    /// The license configurations.
    LicenseSpecifications: Listing<LicenseSpecification>?
    /// Indicates whether an instance stops or terminates when you initiate
    /// shutdown from the instance (using the operating system command for
    /// system shutdown).
    InstanceInitiatedShutdownBehavior: String?
    /// Indicates whether to enable the instance for stop protection.
    DisableApiStop: Boolean?
    CpuOptions: CpuOptions?
    PrivateDnsNameOptions: PrivateDnsNameOptions?
    /// One or more security group IDs.
    SecurityGroupIds: Listing<String>?
    /// The name of the EC2 key pair
    KeyName: String?
    /// If you set this parameter to true, you can't terminate the instance
    /// using the Amazon EC2 console, CLI, or API.
    DisableApiTermination: Boolean?
    InstanceMarketOptions: InstanceMarketOptions?
    InstanceRequirements: InstanceRequirements?
    RamDiskId: String?
    CapacityReservationSpecification: CapacityReservationSpecification?
    CreditSpecification: CreditSpecification?
}
/// Specifies the tags to apply to a resource when the resource is created
/// for the launch template.
class TagSpecification {
    /// The type of resource to tag.
    ResourceType: String?
    /// The tags for the resource.
    Tags: Listing<Tag>?
}
/// The user data to make available to the instance.
class Tag {
    Value: String
    Key: String
}
/// Information about a block device mapping for an Amazon EC2 launch
/// template.
class BlockDeviceMapping {
    Ebs: Ebs?
    /// To omit the device from the block device mapping, specify an empty
    /// string.
    NoDevice: String?
    /// The virtual device name (ephemeralN).
    VirtualName: String?
    /// The user data to make available to the instance.
    DeviceName: String?
}
/// Parameters for a block device for an EBS volume in an Amazon EC2
/// launch template.
class Ebs {
    /// The ID of the snapshot.
    SnapshotId: String?
    /// The volume type.
    VolumeType: String?
    /// The ARN of the symmetric AWS Key Management Service (AWS KMS) CMK used
    /// for encryption.
    KmsKeyId: String?
    /// Indicates whether the EBS volume is encrypted. Encrypted volumes can
    /// only be attached to instances that support Amazon EBS encryption. If
    /// you are creating a volume from a snapshot, you can't specify an
    /// encryption value.
    Encrypted: Boolean?
    /// The throughput to provision for a gp3 volume, with a maximum of 1,000
    /// MiB/s.
    Throughput: Int?
    /// The number of I/O operations per second (IOPS).
    Iops: Int?
    /// The size of the volume, in GiBs. You must specify either a snapshot ID
    /// or a volume size.
    VolumeSize: Int?
    /// Indicates whether the EBS volume is deleted on instance termination.
    DeleteOnTermination: Boolean?
}
/// The maintenance options of your instance.
class MaintenanceOptions {
    /// Disables the automatic recovery behavior of your instance or sets it
    /// to default.
    AutoRecovery: String?
    /// Disables the automatic reboot-migration behavior of your instance or
    /// sets it to default.
    RebootMigration: String?
}
/// Specifies an IAM instance profile, which is a container for an IAM
/// role for your instance.
class IamInstanceProfile {
    /// The Amazon Resource Name (ARN) of the instance profile.
    Arn: String?
    /// The name of the instance profile.
    Name: String?
}
/// Specifies a specification for an Elastic GPU for launch template.
class ElasticGpuSpecification {
    /// The type of Elastic Graphics accelerator.
    Type: String?
}
/// Specifies an elastic inference accelerator.
class LaunchTemplateElasticInferenceAccelerator {
    /// The type of elastic inference accelerator.
    Type: String?
    /// The number of elastic inference accelerators to attach to the
    /// instance.
    Count: Int?
}
/// Specifies the placement of an instance.
class Placement {
    /// The name of the placement group for the instance.
    GroupName: String?
    /// The tenancy of the instance (if the instance is running in a VPC). An
    /// instance with a tenancy of dedicated runs on single-tenant hardware.
    Tenancy: String?
    /// Reserved for future use.
    SpreadDomain: String?
    /// The number of the partition the instance should launch in. Valid only
    /// if the placement group strategy is set to partition.
    PartitionNumber: Int?
    /// The Availability Zone for the instance.
    AvailabilityZone: String?
    /// The affinity setting for an instance on a Dedicated Host.
    Affinity: String?
    /// The ID of the Dedicated Host for the instance.
    HostId: String?
    /// The ARN of the host resource group in which to launch the instances.
    /// If you specify a host resource group ARN, omit the Tenancy parameter
    /// or set it to host.
    HostResourceGroupArn: String?
    /// The Group Id of a placement group. You must specify the Placement
    /// Group Group Id to launch an instance in a shared placement group.
    GroupId: String?
}
/// Specifies the parameters for a network interface.
class NetworkInterface {
    /// A description for the network interface.
    Description: String?
    /// The primary private IPv4 address of the network interface.
    PrivateIpAddress: String?
    /// One or more private IPv4 addresses.
    PrivateIpAddresses: Listing<PrivateIpAdd>?
    /// The number of secondary private IPv4 addresses to assign to a network
    /// interface.
    SecondaryPrivateIpAddressCount: Int?
    /// The number of IPv6 prefixes to be automatically assigned to the
    /// network interface.
    Ipv6PrefixCount: Int?
    /// One or more IPv4 prefixes to be assigned to the network interface.
    Ipv4Prefixes: Listing<Ipv4PrefixSpecification>?
    /// The device index for the network interface attachment.
    DeviceIndex: Int?
    /// Enables the first IPv6 global unique address (GUA) on a dual stack or
    /// IPv6-only ENI immutable.
    PrimaryIpv6: Boolean?
    /// The number of IPv4 prefixes to be automatically assigned to the
    /// network interface.
    Ipv4PrefixCount: Int?
    /// One or more IPv6 prefixes to be assigned to the network interface.
    Ipv6Prefixes: Listing<Ipv6PrefixSpecification>?
    /// The ID of the subnet for the network interface.
    SubnetId: String?
    /// One or more specific IPv6 addresses from the IPv6 CIDR block range of
    /// your subnet.
    Ipv6Addresses: Listing<Ipv6Add>?
    /// Associates a public IPv4 address with eth0 for a new network
    /// interface.
    AssociatePublicIpAddress: Boolean?
    /// The ID of the network interface.
    NetworkInterfaceId: String?
    /// The index of the network card.
    NetworkCardIndex: Int?
    /// The type of network interface.
    InterfaceType: String?
    /// Indicates whether to associate a Carrier IP address with eth0 for a
    /// new network interface.
    AssociateCarrierIpAddress: Boolean?
    EnaSrdSpecification: EnaSrdSpecification?
    /// The number of IPv6 addresses to assign to a network interface.
    Ipv6AddressCount: Int?
    /// The IDs of one or more security groups.
    Groups: Listing<String>?
    /// Indicates whether the network interface is deleted when the instance
    /// is terminated.
    DeleteOnTermination: Boolean?
    ConnectionTrackingSpecification: ConnectionTrackingSpecification?
}
/// Specifies a secondary private IPv4 address for a network interface.
class PrivateIpAdd {
    /// The private IPv4 address.
    PrivateIpAddress: String?
    /// Indicates whether the private IPv4 address is the primary private IPv4
    /// address. Only one IPv4 address can be designated as primary.
    Primary: Boolean?
}
/// Specifies an IPv4 prefix for a network interface.
class Ipv4PrefixSpecification {
    /// The IPv4 prefix.
    Ipv4Prefix: String?
}
/// Specifies an IPv6 prefix for a network interface.
class Ipv6PrefixSpecification {
    Ipv6Prefix: String?
}
/// Specifies an IPv6 address.
class Ipv6Add {
    Ipv6Address: String?
}
/// Allows customer to specify ENA-SRD options
class EnaSrdSpecification {
    /// Enables TCP ENA-SRD
    EnaSrdEnabled: Boolean?
    EnaSrdUdpSpecification: EnaSrdUdpSpecification?
}
/// Allows customer to specify ENA-SRD (UDP) options
class EnaSrdUdpSpecification {
    /// Enables UDP ENA-SRD
    EnaSrdUdpEnabled: Boolean?
}
/// Allows customer to specify Connection Tracking options
class ConnectionTrackingSpecification {
    /// Integer value for UDP Timeout
    UdpTimeout: Int?
    /// Integer value for TCP Established Timeout
    TcpEstablishedTimeout: Int?
    /// Integer value for UDP Stream Timeout
    UdpStreamTimeout: Int?
}
/// Indicates whether the instance is enabled for AWS Nitro Enclaves.
class EnclaveOptions {
    /// If this parameter is set to true, the instance is enabled for AWS
    /// Nitro Enclaves; otherwise, it is not enabled for AWS Nitro Enclaves.
    Enabled: Boolean?
}
/// Specifies whether detailed monitoring is enabled for an instance.
class Monitoring {
    /// Specify true to enable detailed monitoring.
    Enabled: Boolean?
}
/// Specifies whether your instance is configured for hibernation.
class HibernationOptions {
    /// TIf you set this parameter to true, the instance is enabled for
    /// hibernation.
    Configured: Boolean?
}
/// The metadata options for the instance.
class MetadataOptions {
    /// The desired HTTP PUT response hop limit for instance metadata
    /// requests. The larger the number, the further instance metadata
    /// requests can travel.
    HttpPutResponseHopLimit: Int?
    /// IMDSv2 uses token-backed sessions.
    HttpTokens: String?
    /// Enables or disables the IPv6 endpoint for the instance metadata
    /// service.
    HttpProtocolIpv6: String?
    /// Set to enabled to allow access to instance tags from the instance
    /// metadata.
    InstanceMetadataTags: String?
    /// Enables or disables the HTTP metadata endpoint on your instances. If
    /// the parameter is not specified, the default state is enabled.
    HttpEndpoint: String?
}
/// Specifies a license configuration for an instance.
class LicenseSpecification {
    /// The Amazon Resource Name (ARN) of the license configuration.
    LicenseConfigurationArn: String?
}
/// specifies the CPU options for an instance.
class CpuOptions {
    /// The number of threads per CPU core. To disable multithreading for the
    /// instance, specify a value of 1. Otherwise, specify the default value
    /// of 2.
    ThreadsPerCore: Int?
    /// Indicates whether to enable the instance for AMD SEV-SNP. AMD SEV-SNP
    /// is supported with M6a, R6a, and C6a instance types only.
    AmdSevSnp: "enabled" | "disabled" | *Null
    /// The number of CPU cores for the instance.
    CoreCount: Int?
}
/// Describes the options for instance hostnames.
class PrivateDnsNameOptions {
    /// Indicates whether to respond to DNS queries for instance hostnames
    /// with DNS A records.
    EnableResourceNameDnsARecord: Boolean?
    /// The type of hostname for EC2 instances.
    HostnameType: String?
    /// Indicates whether to respond to DNS queries for instance hostnames
    /// with DNS AAAA records.
    EnableResourceNameDnsAAAARecord: Boolean?
}
/// The market (purchasing) option for the instances.
class InstanceMarketOptions {
    SpotOptions: SpotOptions?
    /// The market type.
    MarketType: String?
}
/// Specifies options for Spot Instances.
class SpotOptions {
    /// The Spot Instance request type.
    SpotInstanceType: String?
    /// The behavior when a Spot Instance is interrupted. The default is
    /// terminate.
    InstanceInterruptionBehavior: String?
    /// The maximum hourly price you're willing to pay for the Spot Instances.
    MaxPrice: String?
    /// Deprecated
    BlockDurationMinutes: Int?
    /// The end date of the request, in UTC format (YYYY-MM-DDTHH:MM:SSZ).
    /// Supported only for persistent requests.
    ValidUntil: String?
}
/// The attributes for the instance types.
class InstanceRequirements {
    /// The type of local storage that is required.
    LocalStorageTypes: Listing<String>?
    /// Indicates whether current or previous generation instance types are
    /// included.
    InstanceGenerations: Listing<String>?
    NetworkInterfaceCount: NetworkInterfaceCount?
    MemoryGiBPerVCpu: MemoryGiBPerVCpu?
    /// The accelerator types that must be on the instance type.
    AcceleratorTypes: Listing<String>?
    VCpuCount: VCpuCount?
    /// The instance types to exclude.
    ExcludedInstanceTypes: Listing<String>?
    /// Indicates whether instance types must have accelerators by specific
    /// manufacturers.
    AcceleratorManufacturers: Listing<String>?
    /// The instance types to apply your specified attributes against.
    AllowedInstanceTypes: Listing<String>?
    /// The user data to make available to the instance.
    LocalStorage: String?
    /// The CPU manufacturers to include.
    CpuManufacturers: Listing<String>?
    AcceleratorCount: AcceleratorCount?
    NetworkBandwidthGbps: NetworkBandwidthGbps?
    /// Indicates whether bare metal instance types must be included,
    /// excluded, or required.
    BareMetal: String?
    /// Indicates whether instance types must support hibernation for On-
    /// Demand Instances.
    RequireHibernateSupport: Boolean?
    /// The price protection threshold for Spot Instances.
    MaxSpotPriceAsPercentageOfOptimalOnDemandPrice: Int?
    /// The price protection threshold for Spot Instances.
    SpotMaxPricePercentageOverLowestPrice: Int?
    BaselineEbsBandwidthMbps: BaselineEbsBandwidthMbps?
    /// The price protection threshold for On-Demand Instances.
    OnDemandMaxPricePercentageOverLowestPrice: Int?
    /// The accelerators that must be on the instance type.
    AcceleratorNames: Listing<String>?
    AcceleratorTotalMemoryMiB: AcceleratorTotalMemoryMiB?
    BurstablePerformance: String?
    MemoryMiB: MemoryMiB?
    TotalLocalStorageGB: TotalLocalStorageGB?
}
/// TThe minimum and maximum number of network interfaces.
class NetworkInterfaceCount {
    Min: Int?
    Max: Int?
}
/// The minimum and maximum amount of memory per vCPU, in GiB.
class MemoryGiBPerVCpu {
    /// TThe minimum amount of memory per vCPU, in GiB.
    Min: Float?
    /// The maximum amount of memory per vCPU, in GiB.
    Max: Float?
}
/// The minimum and maximum number of vCPUs.
class VCpuCount {
    /// The minimum number of vCPUs.
    Min: Int?
    /// The maximum number of vCPUs.
    Max: Int?
}
/// The minimum and maximum number of accelerators (GPUs, FPGAs, or AWS
/// Inferential chips) on an instance.
class AcceleratorCount {
    /// The minimum number of accelerators.
    Min: Int?
    /// The maximum number of accelerators.
    Max: Int?
}
/// The minimum and maximum amount of network bandwidth, in gigabits per
/// second (Gbps).
class NetworkBandwidthGbps {
    /// The minimum amount of network bandwidth, in Gbps.
    Min: Float?
    /// The maximum amount of network bandwidth, in Gbps.
    Max: Float?
}
/// The minimum and maximum baseline bandwidth to Amazon EBS, in Mbps.
class BaselineEbsBandwidthMbps {
    /// The minimum baseline bandwidth, in Mbps.
    Min: Int?
    /// The maximum baseline bandwidth, in Mbps.
    Max: Int?
}
/// The minimum and maximum amount of total accelerator memory, in MiB.
class AcceleratorTotalMemoryMiB {
    /// The minimum amount of accelerator memory, in MiB.
    Min: Int?
    /// The maximum amount of accelerator memory, in MiB.
    Max: Int?
}
/// The minimum and maximum amount of memory, in MiB.
class MemoryMiB {
    /// The minimum amount of memory, in MiB.
    Min: Int?
    /// The maximum amount of memory, in MiB.
    Max: Int?
}
/// The minimum and maximum amount of total local storage, in GB.
class TotalLocalStorageGB {
    Min: Float?
    Max: Float?
}
/// Specifies an instance's Capacity Reservation targeting option.
class CapacityReservationSpecification {
    /// Indicates the instance's Capacity Reservation preferences.
    CapacityReservationPreference: String?
    CapacityReservationTarget: CapacityReservationTarget?
}
/// Specifies a target Capacity Reservation.
class CapacityReservationTarget {
    /// The ARN of the Capacity Reservation resource group in which to run the
    /// instance.
    CapacityReservationResourceGroupArn: String?
    /// The ID of the Capacity Reservation in which to run the instance.
    CapacityReservationId: String?
}
/// The user data to make available to the instance.
class CreditSpecification {
    /// The user data to make available to the instance.
    CpuCredits: String?
}
/// Specifies the tags to apply to the launch template during creation.
class LaunchTemplateTagSpecification {
    /// The type of resource to tag.
    ResourceType: String?
    /// The tags for the resource.
    Tags: Listing<Tag>?
}
