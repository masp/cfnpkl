/// Definition of the AWS::QuickSight::DataSet Resource Type.
extends ".../AWS/Resource.pkl"
Type = "AWS::QuickSight::DataSet"
Properties: Props?
class Props {
    /// <p>The Amazon Resource Name (ARN) of the resource.</p>
    Arn: String?
    AwsAccountId: String(length <= 12 && length >= 12 && matches(Regex(#"^[0-9]{12}$"#)))?
    /// <p>Groupings of columns that work together in certain QuickSight
    /// features. Currently, only geospatial hierarchy is supported.</p>
    ColumnGroups: Listing<ColumnGroup>?
    ColumnLevelPermissionRules: Listing<ColumnLevelPermissionRule>?
    /// <p>The amount of SPICE capacity used by this dataset. This is 0 if the
    /// dataset isn't             imported into SPICE.</p>
    ConsumedSpiceCapacityInBytes: Float?
    /// <p>The time that this dataset was created.</p>
    CreatedTime: String?
    DataSetId: String?
    /// <p>The parameters declared in the dataset.</p>
    DatasetParameters: Listing<DatasetParameter>?
    FieldFolders: Mapping?
    ImportMode: "SPICE" | "DIRECT_QUERY" | *Null
    /// <p>The last time that this dataset was updated.</p>
    LastUpdatedTime: String?
    LogicalTableMap: Mapping?
    /// <p>The display name for the dataset.</p>
    Name: String(length <= 128 && length >= 1)?
    /// <p>The list of columns after all transforms. These columns are
    /// available in templates,             analyses, and dashboards.</p>
    OutputColumns: Listing<OutputColumn>?
    /// <p>A list of resource permissions on the dataset.</p>
    Permissions: Listing<ResourcePermission>?
    PhysicalTableMap: Mapping?
    RowLevelPermissionDataSet: RowLevelPermissionDataSet?
    RowLevelPermissionTagConfiguration: RowLevelPermissionTagConfiguration?
    /// <p>Contains a map of the key-value pairs for the resource tag or tags
    /// assigned to the dataset.</p>
    Tags: Listing<Tag>?
    IngestionWaitPolicy: IngestionWaitPolicy?
    DataSetUsageConfiguration: DataSetUsageConfiguration?
    DataSetRefreshProperties: DataSetRefreshProperties?
}
/// <p>Groupings of columns that work together in certain Amazon
/// QuickSight features. This is             a variant type structure. For
/// this structure to be valid, only one of the attributes can
/// be non-null.</p>
class ColumnGroup {
    GeoSpatialColumnGroup: GeoSpatialColumnGroup?
}
/// <p>Geospatial column group that denotes a hierarchy.</p>
class GeoSpatialColumnGroup {
    /// <p>Columns in this hierarchy.</p>
    Columns: Listing<String(length <= 128 && length >= 1)>
    CountryCode: "US" | *Null
    /// <p>A display name for the hierarchy.</p>
    Name: String(length <= 64 && length >= 1)
}
class ColumnLevelPermissionRule {
    ColumnNames: Listing<String>?
    Principals: Listing<String>?
}
/// <p>A parameter created in the dataset that could be of any one data
/// type such as string, integer, decimal or datetime.</p>
class DatasetParameter {
    StringDatasetParameter: StringDatasetParameter?
    DecimalDatasetParameter: DecimalDatasetParameter?
    IntegerDatasetParameter: IntegerDatasetParameter?
    DateTimeDatasetParameter: DateTimeDatasetParameter?
}
/// <p>A parameter created in the dataset of string data type.</p>
class StringDatasetParameter {
    Id: String(length <= 128 && length >= 1 && matches(Regex(#"^[a-zA-Z0-9-]+$"#)))
    Name: String(length <= 2048 && length >= 1 && matches(Regex(#"^[a-zA-Z0-9]+$"#)))
    ValueType: "MULTI_VALUED" | "SINGLE_VALUED"
    DefaultValues: StringDatasetParameterDefaultValues?
}
/// <p>List of default values defined for a given string dataset parameter
/// type. Currently only static values are supported.</p>
class StringDatasetParameterDefaultValues {
    /// <p>List of static default values defined for a given string dataset
    /// parameter type.</p>
    StaticValues: Listing<String>?
}
/// <p>A parameter created in the dataset of decimal data type.</p>
class DecimalDatasetParameter {
    Id: String(length <= 128 && length >= 1 && matches(Regex(#"^[a-zA-Z0-9-]+$"#)))
    Name: String(length <= 2048 && length >= 1 && matches(Regex(#"^[a-zA-Z0-9]+$"#)))
    ValueType: "MULTI_VALUED" | "SINGLE_VALUED"
    DefaultValues: DecimalDatasetParameterDefaultValues?
}
/// <p>List of default values defined for a given decimal dataset
/// parameter type. Currently only static values are supported.</p>
class DecimalDatasetParameterDefaultValues {
    /// <p>List of static default values defined for a given decimal dataset
    /// parameter type.</p>
    StaticValues: Listing<Float>?
}
/// <p>A parameter created in the dataset of integer data type.</p>
class IntegerDatasetParameter {
    Id: String(length <= 128 && length >= 1 && matches(Regex(#"^[a-zA-Z0-9-]+$"#)))
    Name: String(length <= 2048 && length >= 1 && matches(Regex(#"^[a-zA-Z0-9]+$"#)))
    ValueType: "MULTI_VALUED" | "SINGLE_VALUED"
    DefaultValues: IntegerDatasetParameterDefaultValues?
}
/// <p>List of default values defined for a given integer dataset
/// parameter type. Currently only static values are supported.</p>
class IntegerDatasetParameterDefaultValues {
    /// <p>List of static default values defined for a given integer dataset
    /// parameter type.</p>
    StaticValues: Listing<Float>?
}
/// <p>A parameter created in the dataset of date time data type.</p>
class DateTimeDatasetParameter {
    Id: String(length <= 128 && length >= 1 && matches(Regex(#"^[a-zA-Z0-9-]+$"#)))
    Name: String(length <= 2048 && length >= 1 && matches(Regex(#"^[a-zA-Z0-9]+$"#)))
    ValueType: "MULTI_VALUED" | "SINGLE_VALUED"
    TimeGranularity: "YEAR" | "QUARTER" | "MONTH" | "WEEK" | "DAY" | "HOUR" | "MINUTE" | "SECOND" | "MILLISECOND" | *Null
    DefaultValues: DateTimeDatasetParameterDefaultValues?
}
/// <p>List of default values defined for a given string date time
/// parameter type. Currently only static values are supported.</p>
class DateTimeDatasetParameterDefaultValues {
    /// <p>List of static default values defined for a given string date time
    /// parameter type.</p>
    StaticValues: Listing<String>?
}
/// <p>Output column.</p>
class OutputColumn {
    Type: "STRING" | "INTEGER" | "DECIMAL" | "DATETIME" | *Null
    SubType: "FIXED" | "FLOAT" | *Null
    /// <p>A description for a column.</p>
    Description: String(length <= 500 && length >= 0)?
    /// <p>A display name for the dataset.</p>
    Name: String(length <= 128 && length >= 1)?
}
/// <p>Permission for the resource.</p>
class ResourcePermission {
    /// <p>The IAM action to grant or revoke permissions on.</p>
    Actions: Listing<String>
    /// <p>The Amazon Resource Name (ARN) of the principal. This can be one of
    /// the             following:</p>         <ul>             <li>
    /// <p>The ARN of an Amazon QuickSight user or group associated with a
    /// data source or dataset. (This is common.)</p>             </li>
    /// <li>                 <p>The ARN of an Amazon QuickSight user, group,
    /// or namespace associated with an analysis, dashboard, template, or
    /// theme. (This is common.)</p>             </li>             <li>
    /// <p>The ARN of an AWS account root: This is an IAM ARN rather than a
    /// QuickSight                     ARN. Use this option only to share
    /// resources (templates) across AWS accounts.                     (This
    /// is less common.) </p>             </li>          </ul>
    Principal: String(length <= 256 && length >= 1)
}
/// <p>The row-level security configuration for the dataset.</p>
class RowLevelPermissionDataSet {
    /// <p>The Amazon Resource Name (ARN) of the permission dataset.</p>
    Arn: String
    /// <p>The namespace associated with the row-level permissions
    /// dataset.</p>
    Namespace: String(length <= 64 && length >= 0 && matches(Regex(#"^[a-zA-Z0-9._-]*$"#)))?
    PermissionPolicy: "GRANT_ACCESS" | "DENY_ACCESS"
    FormatVersion: "VERSION_1" | "VERSION_2" | *Null
    Status: "ENABLED" | "DISABLED" | *Null
}
/// <p>The configuration of tags on a dataset to set row-level
/// security.</p>
class RowLevelPermissionTagConfiguration {
    Status: "ENABLED" | "DISABLED" | *Null
    /// <p>A set of rules associated with row-level security, such as the tag
    /// names and columns that they are assigned to.</p>
    TagRules: Listing<RowLevelPermissionTagRule>
    /// <p>A list of tag configuration rules to apply to a dataset. All tag
    /// configurations have the OR condition. Tags within each tile will be
    /// joined (AND). At least one rule in this structure must have all tag
    /// values assigned to it to apply Row-level security (RLS) to the
    /// dataset.</p>
    TagRuleConfigurations: Listing<Listing<String(length <= 128 && length >= 1)>>?
}
/// <p>Permission for the resource.</p>
class RowLevelPermissionTagRule {
    /// <p>The column name that a tag key is assigned to.</p>
    ColumnName: String
    /// <p>The unique key for a tag.</p>
    TagKey: String(length <= 128 && length >= 1)
    /// <p>A string that you want to use to filter by all the values in a
    /// column in the dataset and donâ€™t want to list the values one by one.
    /// For example, you can use an asterisk as your match all value.</p>
    MatchAllValue: String(length <= 256 && length >= 1)?
    /// <p>A string that you want to use to delimit the values when you pass
    /// the values at run time. For example, you can delimit the values with a
    /// comma.</p>
    TagMultiValueDelimiter: String(length <= 10)?
}
/// <p>The key or keys of the key-value pairs for the resource tag or tags
/// assigned to the             resource.</p>
class Tag {
    /// <p>Tag value.</p>
    Value: String(length <= 256 && length >= 1)
    /// <p>Tag key.</p>
    Key: String(length <= 128 && length >= 1)
}
/// <p>Wait policy to use when creating/updating dataset. Default is to
/// wait for SPICE ingestion to finish with timeout of 36 hours.</p>
class IngestionWaitPolicy {
    /// <p>Wait for SPICE ingestion to finish to mark dataset creation/update
    /// successful. Default (true).   Applicable only when DataSetImportMode
    /// mode is set to SPICE.</p>
    WaitForSpiceIngestion: Boolean?
    /// <p>The maximum time (in hours) to wait for Ingestion to complete.
    /// Default timeout is 36 hours.  Applicable only when DataSetImportMode
    /// mode is set to SPICE and WaitForSpiceIngestion is set to true.</p>
    IngestionWaitTimeInHours: Float?
}
/// <p>The dataset usage configuration for the dataset.</p>
class DataSetUsageConfiguration {
    DisableUseAsDirectQuerySource: Boolean?
    DisableUseAsImportedSource: Boolean?
}
/// <p>The dataset refresh properties for the dataset.</p>
class DataSetRefreshProperties {
    RefreshConfiguration: RefreshConfiguration?
}
/// <p> Refresh Configuration.</p>
class RefreshConfiguration {
    IncrementalRefresh: IncrementalRefresh?
}
/// <p>Incremental Refresh</p>
class IncrementalRefresh {
    LookbackWindow: LookbackWindow?
}
class LookbackWindow {
    /// <p>Column Name</p>
    ColumnName: String?
    /// <p>Size</p>
    Size: Float?
    SizeUnit: "HOUR" | "DAY" | "WEEK" | *Null
}
