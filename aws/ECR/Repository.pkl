/// The AWS::ECR::Repository resource specifies an Amazon Elastic
/// Container Registry (Amazon ECR) repository, where users can push and
/// pull Docker images. For more information, see https://docs.aws.amazon.
/// com/AmazonECR/latest/userguide/Repositories.html
extends ".../AWS/Resource.pkl"
Type = "AWS::ECR::Repository"
Properties: Props?
class Props {
    EmptyOnDelete: Boolean?
    LifecyclePolicy: LifecyclePolicy?
    /// The name to use for the repository. The repository name may be
    /// specified on its own (such as nginx-web-app) or it can be prepended
    /// with a namespace to group the repository into a category (such as
    /// project-a/nginx-web-app). If you don't specify a name, AWS
    /// CloudFormation generates a unique physical ID and uses that ID for the
    /// repository name. For more information, see
    /// https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-
    /// properties-name.html.
    RepositoryName: String(length <= 256 && length >= 2 && matches(Regex(#"^(?=.{2,256}$)((?:[a-z0-9]+(?:[._-][a-z0-9]+)*/)*[a-z0-9]+(?:[._-][a-z0-9]+)*)$"#)))?
    /// The JSON repository policy text to apply to the repository. For more
    /// information, see https://docs.aws.amazon.com/AmazonECR/latest/userguid
    /// e/RepositoryPolicyExamples.html in the Amazon Elastic Container
    /// Registry User Guide.
    RepositoryPolicyText: Mapping | String | *Null
    /// An array of key-value pairs to apply to this resource.
    Tags: Listing<Tag>?
    Arn: String?
    RepositoryUri: String?
    /// The image tag mutability setting for the repository.
    ImageTagMutability: "MUTABLE" | "IMMUTABLE" | *Null
    ImageScanningConfiguration: ImageScanningConfiguration?
    EncryptionConfiguration: EncryptionConfiguration?
}
/// The LifecyclePolicy property type specifies a lifecycle policy. For
/// information about lifecycle policy syntax, see https://docs.aws.amazon
/// .com/AmazonECR/latest/userguide/LifecyclePolicies.html
class LifecyclePolicy {
    LifecyclePolicyText: String(length <= 30720 && length >= 100)?
    RegistryId: String(length <= 12 && length >= 12 && matches(Regex(#"^[0-9]{12}$"#)))?
}
/// A key-value pair to associate with a resource.
class Tag {
    /// The key name of the tag. You can specify a value that is 1 to 127
    /// Unicode characters in length and cannot be prefixed with aws:. You can
    /// use any of the following characters: the set of Unicode letters,
    /// digits, whitespace, _, ., /, =, +, and -.
    Key: String(length <= 127 && length >= 1)
    /// The value for the tag. You can specify a value that is 1 to 255
    /// Unicode characters in length and cannot be prefixed with aws:. You can
    /// use any of the following characters: the set of Unicode letters,
    /// digits, whitespace, _, ., /, =, +, and -.
    Value: String(length <= 255 && length >= 1)
}
/// The image scanning configuration for the repository. This setting
/// determines whether images are scanned for known vulnerabilities after
/// being pushed to the repository.
class ImageScanningConfiguration {
    ScanOnPush: Boolean?
}
/// The encryption configuration for the repository. This determines how
/// the contents of your repository are encrypted at rest.  By default,
/// when no encryption configuration is set or the AES256 encryption type
/// is used, Amazon ECR uses server-side encryption with Amazon S3-managed
/// encryption keys which encrypts your data at rest using an AES-256
/// encryption algorithm. This does not require any action on your part.
/// For more information, see
/// https://docs.aws.amazon.com/AmazonECR/latest/userguide/encryption-at-
/// rest.html
class EncryptionConfiguration {
    EncryptionType: "AES256" | "KMS"
    KmsKey: String(length <= 2048 && length >= 1)?
}
