/// Resource Type definition for AWS::OpsWorks::Layer
extends ".../AWS/Resource.pkl"
Type = "AWS::OpsWorks::Layer"
Properties: Props?
class Props {
    Id: String?
    Attributes: Mapping?
    AutoAssignElasticIps: Boolean?
    AutoAssignPublicIps: Boolean?
    CustomInstanceProfileArn: String?
    CustomJson: Mapping?
    CustomRecipes: Recipes?
    CustomSecurityGroupIds: Listing<String>?
    EnableAutoHealing: Boolean?
    InstallUpdatesOnBoot: Boolean?
    LifecycleEventConfiguration: LifecycleEventConfiguration?
    LoadBasedAutoScaling: LoadBasedAutoScaling?
    Name: String?
    Packages: Listing<String>?
    Shortname: String?
    StackId: String?
    Tags: Listing<Tag>?
    Type: String?
    UseEbsOptimizedInstances: Boolean?
    VolumeConfigurations: Listing<VolumeConfiguration>?
}
class Recipes {
    Configure: Listing<String>?
    Deploy: Listing<String>?
    Setup: Listing<String>?
    Shutdown: Listing<String>?
    Undeploy: Listing<String>?
}
class LifecycleEventConfiguration {
    ShutdownEventConfiguration: ShutdownEventConfiguration?
}
class ShutdownEventConfiguration {
    DelayUntilElbConnectionsDrained: Boolean?
    ExecutionTimeout: Int?
}
class LoadBasedAutoScaling {
    DownScaling: AutoScalingThresholds?
    Enable: Boolean?
    UpScaling: AutoScalingThresholds?
}
class AutoScalingThresholds {
    CpuThreshold: Float?
    IgnoreMetricsTime: Int?
    InstanceCount: Int?
    LoadThreshold: Float?
    MemoryThreshold: Float?
    ThresholdsWaitTime: Int?
}
class Tag {
    Key: String
    Value: String
}
class VolumeConfiguration {
    Encrypted: Boolean?
    Iops: Int?
    MountPoint: String?
    NumberOfDisks: Int?
    RaidLevel: Int?
    Size: Int?
    VolumeType: String?
}
