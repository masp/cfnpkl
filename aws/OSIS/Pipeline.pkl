/// An OpenSearch Ingestion Service Data Prepper pipeline running Data
/// Prepper.
extends ".../AWS/Resource.pkl"
Type = "AWS::OSIS::Pipeline"
Properties: Props?
class Props {
    BufferOptions: BufferOptions?
    EncryptionAtRestOptions: EncryptionAtRestOptions?
    LogPublishingOptions: LogPublishingOptions?
    /// The maximum pipeline capacity, in Ingestion Compute Units (ICUs).
    MaxUnits: Int?
    /// The minimum pipeline capacity, in Ingestion Compute Units (ICUs).
    MinUnits: Int?
    /// The Data Prepper pipeline configuration in YAML format.
    PipelineConfigurationBody: String(length <= 12000 && length >= 1)?
    /// Name of the OpenSearch Ingestion Service pipeline to create. Pipeline
    /// names are unique across the pipelines owned by an account within an
    /// AWS Region.
    PipelineName: String(length <= 28 && length >= 3 && matches(Regex(#"[a-z][a-z0-9\-]+"#)))?
    /// An array of key-value pairs to apply to this resource.
    Tags: Listing<Tag>?
    VpcOptions: VpcOptions?
    /// The VPC interface endpoints that have access to the pipeline.
    VpcEndpoints: Listing<VpcEndpoint>?
    /// The Amazon Resource Name (ARN) of the pipeline.
    PipelineArn: String(length <= 76 && length >= 46 && matches(Regex(#"^arn:(aws|aws\-cn|aws\-us\-gov|aws\-iso|aws\-iso\-b):osis:.+:pipeline\/.+$"#)))?
    /// A list of endpoints that can be used for ingesting data into a
    /// pipeline
    IngestEndpointUrls: Listing<String>?
}
/// Key-value pairs to configure buffering.
class BufferOptions {
    /// Whether persistent buffering should be enabled.
    PersistentBufferEnabled: Boolean
}
/// Key-value pairs to configure encryption at rest.
class EncryptionAtRestOptions {
    /// The KMS key to use for encrypting data. By default an AWS owned key is
    /// used
    KmsKeyArn: String
}
/// Key-value pairs to configure log publishing.
class LogPublishingOptions {
    /// Whether logs should be published.
    IsLoggingEnabled: Boolean?
    /// The destination for OpenSearch Ingestion Service logs sent to Amazon
    /// CloudWatch.
    CloudWatchLogDestination: CloudWatchLogDestination?
}
/// The destination for OpenSearch Ingestion Service logs sent to Amazon
/// CloudWatch.
class CloudWatchLogDestination {
    LogGroup: String(length <= 512 && length >= 1 && matches(Regex(#"\/aws\/vendedlogs\/[\.\-_/#A-Za-z0-9]+"#)))
}
/// A key-value pair to associate with a resource.
class Tag {
    /// The key name of the tag. You can specify a value that is 1 to 128
    /// Unicode characters in length and cannot be prefixed with aws:. You can
    /// use any of the following characters: the set of Unicode letters,
    /// digits, whitespace, _, ., /, =, +, and -.
    Key: String(length <= 128 && length >= 1)
    /// The value for the tag. You can specify a value that is 0 to 256
    /// Unicode characters in length and cannot be prefixed with aws:. You can
    /// use any of the following characters: the set of Unicode letters,
    /// digits, whitespace, _, ., /, =, +, and -.
    Value: String(length <= 256 && length >= 0)
}
/// Container for the values required to configure VPC access for the
/// pipeline. If you don't specify these values, OpenSearch Ingestion
/// Service creates the pipeline with a public endpoint.
class VpcOptions {
    /// A list of security groups associated with the VPC endpoint.
    SecurityGroupIds: Listing<String(length <= 20 && length >= 11 && matches(Regex(#"sg-\w{8}(\w{9})?"#)))>?
    /// A list of subnet IDs associated with the VPC endpoint.
    SubnetIds: Listing<String(length <= 24 && length >= 15 && matches(Regex(#"subnet-\w{8}(\w{9})?"#)))>
}
/// An OpenSearch Ingestion Service-managed VPC endpoint that will access
/// one or more pipelines.
class VpcEndpoint {
    /// The unique identifier of the endpoint.
    VpcEndpointId: String?
    /// The ID for your VPC. AWS Privatelink generates this value when you
    /// create a VPC.
    VpcId: String?
    VpcOptions: VpcOptions?
}
