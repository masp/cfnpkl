/// An object representing an Amazon EKS IdentityProviderConfig.
extends ".../AWS/Resource.pkl"
Type = "AWS::EKS::IdentityProviderConfig"
Properties: Props?
class Props {
    /// The name of the identity provider configuration.
    ClusterName: String?
    /// The type of the identity provider configuration.
    Type: "oidc" | *Null
    /// The name of the OIDC provider configuration.
    IdentityProviderConfigName: String?
    Oidc: OidcIdentityProviderConfig?
    /// An array of key-value pairs to apply to this resource.
    Tags: Listing<Tag>?
    /// The ARN of the configuration.
    IdentityProviderConfigArn: String?
}
/// An object representing an OpenID Connect (OIDC) configuration.
class OidcIdentityProviderConfig {
    /// This is also known as audience. The ID for the client application that
    /// makes authentication requests to the OpenID identity provider.
    ClientId: String
    /// The JWT claim that the provider uses to return your groups.
    GroupsClaim: String?
    /// The prefix that is prepended to group claims to prevent clashes with
    /// existing names (such as system: groups).
    GroupsPrefix: String?
    /// The URL of the OpenID identity provider that allows the API server to
    /// discover public signing keys for verifying tokens.
    IssuerUrl: String
    RequiredClaims: Listing<RequiredClaim>?
    /// The JSON Web Token (JWT) claim to use as the username. The default is
    /// sub, which is expected to be a unique identifier of the end user. You
    /// can choose other claims, such as email or name, depending on the
    /// OpenID identity provider. Claims other than email are prefixed with
    /// the issuer URL to prevent naming clashes with other plug-ins.
    UsernameClaim: String?
    /// The prefix that is prepended to username claims to prevent clashes
    /// with existing names. If you do not provide this field, and username is
    /// a value other than email, the prefix defaults to issuerurl#. You can
    /// use the value - to disable all prefixing.
    UsernamePrefix: String?
}
/// The key value pairs that describe required claims in the identity
/// token. If set, each claim is verified to be present in the token with
/// a matching value.
class RequiredClaim {
    /// The key of the requiredClaims.
    Key: String(length <= 63 && length >= 1)
    /// The value for the requiredClaims.
    Value: String(length <= 253 && length >= 1)
}
/// A key-value pair to associate with a resource.
class Tag {
    /// The key name of the tag. You can specify a value that is 1 to 128
    /// Unicode characters in length and cannot be prefixed with aws:. You can
    /// use any of the following characters: the set of Unicode letters,
    /// digits, whitespace, _, ., /, =, +, and -.
    Key: String(length <= 128 && length >= 1)
    /// The value for the tag. You can specify a value that is 0 to 256
    /// Unicode characters in length and cannot be prefixed with aws:. You can
    /// use any of the following characters: the set of Unicode letters,
    /// digits, whitespace, _, ., /, =, +, and -.
    Value: String(length <= 256 && length >= 0)
}
