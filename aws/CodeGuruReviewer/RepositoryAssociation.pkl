/// This resource schema represents the RepositoryAssociation resource in
/// the Amazon CodeGuru Reviewer service.
extends ".../AWS/Resource.pkl"
Type = "AWS::CodeGuruReviewer::RepositoryAssociation"
Properties: Props?
class Props {
    /// Name of the repository to be associated.
    Name: String(length <= 100 && length >= 1 && matches(Regex(#"^\S[\w.-]*$"#)))?
    /// The type of repository to be associated.
    Type: "CodeCommit" | "Bitbucket" | "GitHubEnterpriseServer" | "S3Bucket" | *Null
    /// The owner of the repository. For a Bitbucket repository, this is the
    /// username for the account that owns the repository.
    Owner: String(length <= 100 && length >= 1 && matches(Regex(#"^\S(.*\S)?$"#)))?
    /// The name of the S3 bucket associated with an associated S3 repository.
    /// It must start with `codeguru-reviewer-`.
    BucketName: String(length <= 63 && length >= 3 && matches(Regex(#"^\S(.*\S)?$"#)))?
    /// The Amazon Resource Name (ARN) of an AWS CodeStar Connections
    /// connection.
    ConnectionArn: String(length <= 256 && length >= 0 && matches(Regex(#"arn:aws(-[\w]+)*:.+:.+:[0-9]{12}:.+"#)))?
    /// The Amazon Resource Name (ARN) of the repository association.
    AssociationArn: String(length <= 256 && length >= 0 && matches(Regex(#"arn:aws(-[\w]+)*:.+:.+:[0-9]{12}:.+"#)))?
    /// The tags associated with a repository association.
    Tags: Listing<Tag>?
}
/// A key-value pair to associate with a resource.
class Tag {
    /// The key name of the tag. You can specify a value that is 1 to 128
    /// Unicode characters in length and cannot be prefixed with aws:. The
    /// allowed characters across services are: letters, numbers, and spaces
    /// representable in UTF-8, and the following characters: + - = . _ : / @.
    Key: String(length <= 128 && length >= 1)
    /// The value for the tag. You can specify a value that is 0 to 256
    /// Unicode characters in length. The allowed characters across services
    /// are: letters, numbers, and spaces representable in UTF-8, and the
    /// following characters: + - = . _ : / @.
    Value: String(length <= 256 && length >= 0)
}
