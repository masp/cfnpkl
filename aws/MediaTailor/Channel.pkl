/// Definition of AWS::MediaTailor::Channel Resource Type
extends ".../AWS/Resource.pkl"
Type = "AWS::MediaTailor::Channel"
Properties: Props?
class Props {
    /// <p>The ARN of the channel.</p>
    Arn: String?
    ChannelName: String?
    FillerSlate: SlateSource?
    LogConfiguration: LogConfigurationForChannel?
    /// <p>The channel's output properties.</p>
    Outputs: Listing<RequestOutputItem>?
    PlaybackMode: "LOOP" | "LINEAR" | *Null
    /// The tags to assign to the channel.
    Tags: Listing<Tag>?
    Tier: "BASIC" | "STANDARD" | *Null
    TimeShiftConfiguration: TimeShiftConfiguration?
}
/// <p>Slate VOD source configuration.</p>
class SlateSource {
    /// <p>The name of the source location where the slate VOD source is
    /// stored.</p>
    SourceLocationName: String?
    /// <p>The slate VOD source name. The VOD source must already exist in a
    /// source location before it can be used for slate.</p>
    VodSourceName: String?
}
/// <p>The log configuration for the channel.</p>
class LogConfigurationForChannel {
    /// <p>The log types.</p>
    LogTypes: Listing<"AS_RUN">?
}
/// <p>The output configuration for this channel.</p>
class RequestOutputItem {
    DashPlaylistSettings: DashPlaylistSettings?
    HlsPlaylistSettings: HlsPlaylistSettings?
    /// <p>The name of the manifest for the channel. The name appears in the
    /// <code>PlaybackUrl</code>.</p>
    ManifestName: String
    /// <p>A string used to match which <code>HttpPackageConfiguration</code>
    /// is used for each <code>VodSource</code>.</p>
    SourceGroup: String
}
/// <p>Dash manifest configuration parameters.</p>
class DashPlaylistSettings {
    /// <p>The total duration (in seconds) of each manifest. Minimum value:
    /// <code>30</code> seconds. Maximum value: <code>3600</code> seconds.</p>
    ManifestWindowSeconds: Float?
    /// <p>Minimum amount of content (measured in seconds) that a player must
    /// keep available in the buffer. Minimum value: <code>2</code> seconds.
    /// Maximum value: <code>60</code> seconds.</p>
    MinBufferTimeSeconds: Float?
    /// <p>Minimum amount of time (in seconds) that the player should wait
    /// before requesting updates to the manifest. Minimum value:
    /// <code>2</code> seconds. Maximum value: <code>60</code> seconds.</p>
    MinUpdatePeriodSeconds: Float?
    /// <p>Amount of time (in seconds) that the player should be from the live
    /// point at the end of the manifest. Minimum value: <code>2</code>
    /// seconds. Maximum value: <code>60</code> seconds.</p>
    SuggestedPresentationDelaySeconds: Float?
}
/// <p>HLS playlist configuration parameters.</p>
class HlsPlaylistSettings {
    /// <p>The total duration (in seconds) of each manifest. Minimum value:
    /// <code>30</code> seconds. Maximum value: <code>3600</code> seconds.</p>
    ManifestWindowSeconds: Float?
    /// <p>Determines the type of SCTE 35 tags to use in ad markup. Specify
    /// <code>DATERANGE</code> to use <code>DATERANGE</code> tags (for live or
    /// VOD content). Specify <code>SCTE35_ENHANCED</code> to use <code>EXT-X-
    /// CUE-OUT</code> and <code>EXT-X-CUE-IN</code> tags (for VOD content
    /// only).</p>
    AdMarkupType: Listing<"DATERANGE" | "SCTE35_ENHANCED">?
}
class Tag {
    Key: String
    Value: String
}
/// <p>The configuration for time-shifted viewing.</p>
class TimeShiftConfiguration {
    /// <p>The maximum time delay for time-shifted viewing. The minimum
    /// allowed maximum time delay is 0 seconds, and the maximum allowed
    /// maximum time delay is 21600 seconds (6 hours).</p>
    MaxTimeDelaySeconds: Float
}
