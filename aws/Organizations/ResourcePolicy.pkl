/// You can use AWS::Organizations::ResourcePolicy to delegate policy
/// management for AWS Organizations to specified member accounts to
/// perform policy actions that are by default available only to the
/// management account.
extends ".../AWS/Resource.pkl"
Type = "AWS::Organizations::ResourcePolicy"
Properties: Props?
class Props {
    /// The unique identifier (ID) associated with this resource policy.
    Id: String(length <= 131 && matches(Regex(#"^rp-[0-9a-zA-Z_]{4,128}$"#)))?
    /// The Amazon Resource Name (ARN) of the resource policy.
    Arn: String(matches(Regex(#"^arn:aws.*:organizations::\d{12}:resourcepolicy\/o-[a-z0-9]{10,32}\/rp-[0-9a-zA-Z_]{4,128}"#)))?
    /// The policy document. For AWS CloudFormation templates formatted in
    /// YAML, you can provide the policy in JSON or YAML format. AWS
    /// CloudFormation always converts a YAML policy to JSON format before
    /// submitting it.
    Content: Mapping | String | *Null
    /// A list of tags that you want to attach to the resource policy
    Tags: Listing<Tag>?
}
/// A custom key-value pair associated with a resource within your
/// organization.
class Tag {
    /// The key identifier, or name, of the tag.
    Key: String(length <= 128 && length >= 1)
    /// The string value that's associated with the key of the tag. You can
    /// set the value of a tag to an empty string, but you can't set the value
    /// of a tag to null.
    Value: String(length <= 256 && length >= 0)
}
