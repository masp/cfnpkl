/// The AWS::Neptune::DBCluster resource creates an Amazon Neptune DB
/// cluster.
extends ".../AWS/Resource.pkl"
Type = "AWS::Neptune::DBCluster"
Properties: Props?
class Props {
    /// The connection endpoint for the DB cluster. For example: `mystack-
    /// mydbcluster-1apw1j4phylrk.cg034hpkmmjt.us-east-2.rds.amazonaws.com`
    Endpoint: String?
    /// The reader endpoint for the DB cluster. For example: `mystack-
    /// mydbcluster-ro-1apw1j4phylrk.cg034hpkmmjt.us-east-2.rds.amazonaws.com`
    ReadEndpoint: String?
    /// The resource id for the DB cluster. For example: `cluster-
    /// ABCD1234EFGH5678IJKL90MNOP`. The cluster ID uniquely identifies the
    /// cluster and is used in things like IAM authentication policies.
    ClusterResourceId: String?
    /// Provides a list of the AWS Identity and Access Management (IAM) roles
    /// that are associated with the DB cluster. IAM roles that are associated
    /// with a DB cluster grant permission for the DB cluster to access other
    /// AWS services on your behalf.
    AssociatedRoles: Listing<DBClusterRole>?
    /// Provides the list of EC2 Availability Zones that instances in the DB
    /// cluster can be created in.
    AvailabilityZones: Listing<String>?
    /// Specifies the number of days for which automatic DB snapshots are
    /// retained.
    BackupRetentionPeriod: Int?
    /// A value that indicates whether to copy all tags from the DB cluster to
    /// snapshots of the DB cluster. The default behaviour is not to copy
    /// them.
    CopyTagsToSnapshot: Boolean?
    /// The DB cluster identifier. Contains a user-supplied DB cluster
    /// identifier. This identifier is the unique key that identifies a DB
    /// cluster stored as a lowercase string.
    DBClusterIdentifier: String(length <= 63 && length >= 1 && matches(Regex(#"^[a-zA-Z]{1}(?:-?[a-zA-Z0-9]){0,62}$"#)))?
    /// Provides the name of the DB cluster parameter group.
    DBClusterParameterGroupName: String?
    /// The name of the DB parameter group to apply to all instances of the DB
    /// cluster. Used only in case of a major EngineVersion upgrade request.
    DBInstanceParameterGroupName: String?
    /// The port number on which the DB instances in the DB cluster accept
    /// connections.   If not specified, the default port used is `8182`.
    /// Note: `Port` property will soon be deprecated from this resource.
    /// Please update existing templates to rename it with new property
    /// `DBPort` having same functionalities.
    DBPort: Int?
    /// Specifies information on the subnet group associated with the DB
    /// cluster, including the name, description, and subnets in the subnet
    /// group.
    DBSubnetGroupName: String?
    /// Indicates whether or not the DB cluster has deletion protection
    /// enabled. The database can't be deleted when deletion protection is
    /// enabled.
    DeletionProtection: Boolean?
    /// Specifies a list of log types that are enabled for export to
    /// CloudWatch Logs.
    EnableCloudwatchLogsExports: Listing<String>?
    /// Indicates the database engine version.
    EngineVersion: String?
    /// True if mapping of Amazon Identity and Access Management (IAM)
    /// accounts to database accounts is enabled, and otherwise false.
    IamAuthEnabled: Boolean?
    /// If `StorageEncrypted` is true, the Amazon KMS key identifier for the
    /// encrypted DB cluster.
    KmsKeyId: String?
    /// The port number on which the DB cluster accepts connections. For
    /// example: `8182`.
    Port: String?
    /// Specifies the daily time range during which automated backups are
    /// created if automated backups are enabled, as determined by the
    /// BackupRetentionPeriod.
    PreferredBackupWindow: String?
    /// Specifies the weekly time range during which system maintenance can
    /// occur, in Universal Coordinated Time (UTC).
    PreferredMaintenanceWindow: String?
    /// Creates a new DB cluster from a DB snapshot or DB cluster snapshot.
    /// If a DB snapshot is specified, the target DB cluster is created from
    /// the source DB snapshot with a default configuration and default
    /// security group.  If a DB cluster snapshot is specified, the target DB
    /// cluster is created from the source DB cluster restore point with the
    /// same configuration as the original source DB cluster, except that the
    /// new DB cluster is created with the default security group.
    RestoreToTime: String?
    /// Creates a new DB cluster from a DB snapshot or DB cluster snapshot.
    /// If a DB snapshot is specified, the target DB cluster is created from
    /// the source DB snapshot with a default configuration and default
    /// security group.  If a DB cluster snapshot is specified, the target DB
    /// cluster is created from the source DB cluster restore point with the
    /// same configuration as the original source DB cluster, except that the
    /// new DB cluster is created with the default security group.
    RestoreType: String?
    /// Contains the scaling configuration used by the Neptune Serverless
    /// Instances within this DB cluster.
    ServerlessScalingConfiguration: ServerlessScalingConfiguration?
    /// Specifies the identifier for a DB cluster snapshot. Must match the
    /// identifier of an existing snapshot.  After you restore a DB cluster
    /// using a SnapshotIdentifier, you must specify the same
    /// SnapshotIdentifier for any future updates to the DB cluster. When you
    /// specify this property for an update, the DB cluster is not restored
    /// from the snapshot again, and the data in the database is not changed.
    /// However, if you don't specify the SnapshotIdentifier, an empty DB
    /// cluster is created, and the original DB cluster is deleted. If you
    /// specify a property that is different from the previous snapshot
    /// restore property, the DB cluster is restored from the snapshot
    /// specified by the SnapshotIdentifier, and the original DB cluster is
    /// deleted.
    SnapshotIdentifier: String?
    /// Creates a new DB cluster from a DB snapshot or DB cluster snapshot.
    /// If a DB snapshot is specified, the target DB cluster is created from
    /// the source DB snapshot with a default configuration and default
    /// security group.  If a DB cluster snapshot is specified, the target DB
    /// cluster is created from the source DB cluster restore point with the
    /// same configuration as the original source DB cluster, except that the
    /// new DB cluster is created with the default security group.
    SourceDBClusterIdentifier: String?
    /// Indicates whether the DB cluster is encrypted.  If you specify the
    /// `DBClusterIdentifier`, `DBSnapshotIdentifier`, or
    /// `SourceDBInstanceIdentifier` property, don't specify this property.
    /// The value is inherited from the cluster, snapshot, or source DB
    /// instance. If you specify the KmsKeyId property, you must enable
    /// encryption.  If you specify the KmsKeyId, you must enable encryption
    /// by setting StorageEncrypted to true.
    StorageEncrypted: Boolean?
    /// The tags assigned to this cluster.
    Tags: Listing<Tag>?
    /// Creates a new DB cluster from a DB snapshot or DB cluster snapshot.
    /// If a DB snapshot is specified, the target DB cluster is created from
    /// the source DB snapshot with a default configuration and default
    /// security group.  If a DB cluster snapshot is specified, the target DB
    /// cluster is created from the source DB cluster restore point with the
    /// same configuration as the original source DB cluster, except that the
    /// new DB cluster is created with the default security group.
    UseLatestRestorableTime: Boolean?
    /// Provides a list of VPC security groups that the DB cluster belongs to.
    VpcSecurityGroupIds: Listing<String>?
}
/// Describes an AWS Identity and Access Management (IAM) role that is
/// associated with a DB cluster.
class DBClusterRole {
    /// The name of the feature associated with the AWS Identity and Access
    /// Management (IAM) role. For the list of supported feature names, see
    /// DBEngineVersion in the Amazon Neptune API Reference.
    FeatureName: String?
    /// The Amazon Resource Name (ARN) of the IAM role that is associated with
    /// the DB cluster.
    RoleArn: String
}
/// Contains the scaling configuration of an Neptune Serverless DB
/// cluster.
class ServerlessScalingConfiguration {
    /// The minimum number of Neptune capacity units (NCUs) for a DB instance
    /// in an Neptune Serverless cluster. You can specify NCU values in half-
    /// step increments, such as 8, 8.5, 9, and so on. The smallest value you
    /// can use is 1, whereas the largest is 128.
    MinCapacity: Float
    /// The maximum number of Neptune capacity units (NCUs) for a DB instance
    /// in an Neptune Serverless cluster. You can specify NCU values in half-
    /// step increments, such as 40, 40.5, 41, and so on. The smallest value
    /// you can use is 2.5, whereas the largest is 128.
    MaxCapacity: Float
}
/// A key-value pair to associate with a resource.
class Tag {
    /// The key name of the tag. You can specify a value that is 1 to 128
    /// Unicode characters in length and cannot be prefixed with aws:. You can
    /// use any of the following characters: the set of Unicode letters,
    /// digits, whitespace, _, ., /, =, +, and -.
    Key: String(length <= 128 && length >= 1)
    /// The value for the tag. You can specify a value that is 0 to 256
    /// Unicode characters in length and cannot be prefixed with aws:. You can
    /// use any of the following characters: the set of Unicode letters,
    /// digits, whitespace, _, ., /, =, +, and -.
    Value: String(length <= 256 && length >= 0)?
}
