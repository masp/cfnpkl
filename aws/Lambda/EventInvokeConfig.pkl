/// The AWS::Lambda::EventInvokeConfig resource configures options for
/// asynchronous invocation on a version or an alias.
extends ".../AWS/Resource.pkl"
Type = "AWS::Lambda::EventInvokeConfig"
Properties: Props?
class Props {
    DestinationConfig: DestinationConfig?
    /// The name of the Lambda function.
    FunctionName: String(matches(Regex(#"^(arn:(aws[a-zA-Z-]*)?:lambda:)?([a-z]{2}(-gov)?-[a-z]+-\d{1}:)?(\d{12}:)?(function:)?([a-zA-Z0-9-_]+)(:(\$LATEST|[a-zA-Z0-9-_]+))?$"#)))?
    /// The maximum age of a request that Lambda sends to a function for
    /// processing.
    MaximumEventAgeInSeconds: Int?
    /// The maximum number of times to retry when the function returns an
    /// error.
    MaximumRetryAttempts: Int?
    /// The identifier of a version or alias.
    Qualifier: String(matches(Regex(#"^(|[a-zA-Z0-9$_-]{1,129})$"#)))?
}
/// A destination for events after they have been sent to a function for
/// processing.
class DestinationConfig {
    OnFailure: OnFailure?
    OnSuccess: OnSuccess?
}
/// The destination configuration for failed invocations.
class OnFailure {
    /// The Amazon Resource Name (ARN) of the destination resource.
    Destination: String(length <= 350 && length >= 0 && matches(Regex(#"^$|arn:(aws[a-zA-Z0-9-]*):([a-zA-Z0-9\-])+:([a-z]{2}(-gov)?-[a-z]+-\d{1})?:(\d{12})?:(.*)"#)))
}
/// The destination configuration for successful invocations.
class OnSuccess {
    /// The Amazon Resource Name (ARN) of the destination resource.
    Destination: String(length <= 350 && length >= 0 && matches(Regex(#"^$|arn:(aws[a-zA-Z0-9-]*):([a-zA-Z0-9\-])+:([a-z]{2}(-gov)?-[a-z]+-\d{1})?:(\d{12})?:(.*)"#)))
}
