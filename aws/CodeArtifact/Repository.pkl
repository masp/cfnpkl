/// The resource schema to create a CodeArtifact repository.
extends ".../AWS/Resource.pkl"
Type = "AWS::CodeArtifact::Repository"
Properties: Props?
class Props {
    /// The name of the repository.
    RepositoryName: String(length <= 100 && length >= 2 && matches(Regex(#"^([A-Za-z0-9][A-Za-z0-9._\-]{1,99})$"#)))?
    /// The name of the repository. This is used for GetAtt
    Name: String(length <= 100 && length >= 2 && matches(Regex(#"^([A-Za-z0-9][A-Za-z0-9._\-]{1,99})$"#)))?
    /// The name of the domain that contains the repository.
    DomainName: String(length <= 50 && length >= 2 && matches(Regex(#"^([a-z][a-z0-9\-]{0,48}[a-z0-9])$"#)))?
    /// The 12-digit account ID of the AWS account that owns the domain.
    DomainOwner: String(matches(Regex(#"[0-9]{12}"#)))?
    /// A text description of the repository.
    Description: String(length <= 1000)?
    /// The ARN of the repository.
    Arn: String(length <= 2048 && length >= 1)?
    /// A list of external connections associated with the repository.
    ExternalConnections: Listing<String>?
    /// A list of upstream repositories associated with the repository.
    Upstreams: Listing<String>?
    /// The access control resource policy on the provided repository.
    PermissionsPolicyDocument: Mapping?
    /// An array of key-value pairs to apply to this resource.
    Tags: Listing<Tag>?
}
/// A key-value pair to associate with a resource.
class Tag {
    /// The key name of the tag. You can specify a value that is 1 to 127
    /// Unicode characters in length and cannot be prefixed with aws:. You can
    /// use any of the following characters: the set of Unicode letters,
    /// digits, whitespace, _, ., /, =, +, and -.
    Key: String(length <= 128 && length >= 1)
    /// The value for the tag. You can specify a value that is 1 to 255
    /// Unicode characters in length and cannot be prefixed with aws:. You can
    /// use any of the following characters: the set of Unicode letters,
    /// digits, whitespace, _, ., /, =, +, and -.
    Value: String(length <= 256 && length >= 0)
}
