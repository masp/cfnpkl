/// The AWS::MemoryDB::Cluster resource creates an Amazon MemoryDB
/// Cluster.
extends ".../AWS/Resource.pkl"
Type = "AWS::MemoryDB::Cluster"
Properties: Props?
class Props {
    /// The name of the cluster. This value must be unique as it also serves
    /// as the cluster identifier.
    ClusterName: String(matches(Regex(#"[a-z][a-z0-9\-]*"#)))?
    /// An optional description of the cluster.
    Description: String?
    /// The status of the cluster. For example, Available, Updating, Creating.
    Status: String?
    /// The compute and memory capacity of the nodes in the cluster.
    NodeType: String?
    /// The number of shards the cluster will contain.
    NumShards: Int?
    /// The number of replicas to apply to each shard. The limit is 5.
    NumReplicasPerShard: Int?
    /// The name of the subnet group to be used for the cluster.
    SubnetGroupName: String?
    /// One or more Amazon VPC security groups associated with this cluster.
    SecurityGroupIds: Listing<String>?
    /// Specifies the weekly time range during which maintenance on the
    /// cluster is performed. It is specified as a range in the format
    /// ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum maintenance
    /// window is a 60 minute period.
    MaintenanceWindow: String?
    /// The name of the parameter group associated with the cluster.
    ParameterGroupName: String?
    /// The status of the parameter group used by the cluster.
    ParameterGroupStatus: String?
    /// The port number on which each member of the cluster accepts
    /// connections.
    Port: Int?
    /// The number of days for which MemoryDB retains automatic snapshots
    /// before deleting them. For example, if you set SnapshotRetentionLimit
    /// to 5, a snapshot that was taken today is retained for 5 days before
    /// being deleted.
    SnapshotRetentionLimit: Int?
    /// The daily time range (in UTC) during which MemoryDB begins taking a
    /// daily snapshot of your cluster.
    SnapshotWindow: String?
    /// The name of the Access Control List to associate with the cluster.
    ACLName: String(matches(Regex(#"[a-zA-Z][a-zA-Z0-9\-]*"#)))?
    /// The Amazon Resource Name (ARN) of the Amazon Simple Notification
    /// Service (SNS) topic to which notifications are sent.
    SnsTopicArn: String?
    /// The status of the Amazon SNS notification topic. Notifications are
    /// sent only if the status is enabled.
    SnsTopicStatus: String?
    /// A flag that enables in-transit encryption when set to true.  You
    /// cannot modify the value of TransitEncryptionEnabled after the cluster
    /// is created. To enable in-transit encryption on a cluster you must set
    /// TransitEncryptionEnabled to true when you create a cluster.
    TLSEnabled: Boolean?
    /// Enables data tiering. Data tiering is only supported for clusters
    /// using the r6gd node type. This parameter must be set when using r6gd
    /// nodes.
    DataTiering: "true" | "false" | *Null
    /// The ID of the KMS key used to encrypt the cluster.
    KmsKeyId: String?
    /// A list of Amazon Resource Names (ARN) that uniquely identify the RDB
    /// snapshot files stored in Amazon S3. The snapshot files are used to
    /// populate the new cluster. The Amazon S3 object name in the ARN cannot
    /// contain any commas.
    SnapshotArns: Listing<String>?
    /// The name of a snapshot from which to restore data into the new
    /// cluster. The snapshot status changes to restoring while the new
    /// cluster is being created.
    SnapshotName: String?
    /// The user-supplied name of a final cluster snapshot. This is the unique
    /// name that identifies the snapshot. MemoryDB creates the snapshot, and
    /// then deletes the cluster immediately afterward.
    FinalSnapshotName: String?
    /// The Amazon Resource Name (ARN) of the cluster.
    ARN: String?
    /// The Redis engine version used by the cluster.
    EngineVersion: String?
    /// The cluster endpoint.
    ClusterEndpoint: Endpoint?
    /// A flag that enables automatic minor version upgrade when set to true.
    /// You cannot modify the value of AutoMinorVersionUpgrade after the
    /// cluster is created. To enable AutoMinorVersionUpgrade on a cluster you
    /// must set AutoMinorVersionUpgrade to true when you create a cluster.
    AutoMinorVersionUpgrade: Boolean?
    /// An array of key-value pairs to apply to this cluster.
    Tags: Listing<Tag>?
}
class Endpoint {
    /// The DNS address of the primary read-write node.
    Address: String?
    /// The port number that the engine is listening on.
    Port: Int?
}
/// A key-value pair to associate with a resource.
class Tag {
    /// The key for the tag. May not be null.
    Key: String(length <= 128 && length >= 1 && matches(Regex(#"^(?!aws:)(?!memorydb:)[a-zA-Z0-9 _\.\/=+:\-@]{1,128}$"#)))
    /// The tag's value. May be null.
    Value: String(length <= 256 && length >= 1 && matches(Regex(#"^(?!aws:)(?!memorydb:)[a-zA-Z0-9 _\.\/=+:\-@]{1,256}$"#)))
}
