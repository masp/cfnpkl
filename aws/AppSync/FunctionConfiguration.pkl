/// An example resource schema demonstrating some basic constructs and
/// validation rules.
extends ".../AWS/Resource.pkl"
Type = "AWS::AppSync::FunctionConfiguration"
Properties: Props?
class Props {
    /// The unique identifier for the function generated by the service
    FunctionId: String?
    /// The ARN for the function generated by the service
    FunctionArn: String?
    /// The AWS AppSync GraphQL API that you want to attach using this
    /// function.
    ApiId: String?
    /// The resolver code that contains the request and response functions.
    /// When code is used, the runtime is required. The runtime value must be
    /// APPSYNC_JS.
    Code: String?
    /// The Amazon S3 endpoint (where the code is located??).
    CodeS3Location: String?
    /// The name of data source this function will attach.
    DataSourceName: String?
    /// The function description.
    Description: String?
    /// The version of the request mapping template. Currently, only the
    /// 2018-05-29 version of the template is supported.
    FunctionVersion: String?
    /// The maximum number of resolver request inputs that will be sent to a
    /// single AWS Lambda function in a BatchInvoke operation.
    MaxBatchSize: Int?
    /// The name of the function.
    Name: String?
    /// The Function request mapping template. Functions support only the
    /// 2018-05-29 version of the request mapping template.
    RequestMappingTemplate: String?
    /// Describes a Sync configuration for a resolver. Contains information on
    /// which Conflict Detection, as well as Resolution strategy, should be
    /// performed when the resolver is invoked.
    RequestMappingTemplateS3Location: String?
    /// The Function response mapping template.
    ResponseMappingTemplate: String?
    /// The location of a response mapping template in an Amazon S3 bucket.
    /// Use this if you want to provision with a template file in Amazon S3
    /// rather than embedding it in your CloudFormation template.
    ResponseMappingTemplateS3Location: String?
    /// Describes a runtime used by an AWS AppSync pipeline resolver or AWS
    /// AppSync function. Specifies the name and version of the runtime to
    /// use. Note that if a runtime is specified, code must also be specified.
    Runtime: AppSyncRuntime?
    /// Describes a Sync configuration for a resolver. Specifies which
    /// Conflict Detection strategy and Resolution strategy to use when the
    /// resolver is invoked.
    SyncConfig: SyncConfig?
}
/// Describes a runtime used by an AWS AppSync pipeline resolver or AWS
/// AppSync function. Specifies the name and version of the runtime to
/// use. Note that if a runtime is specified, code must also be specified.
class AppSyncRuntime {
    /// The name of the runtime to use. Currently, the only allowed value is
    /// APPSYNC_JS.
    Name: String
    /// The version of the runtime to use. Currently, the only allowed version
    /// is 1.0.0.
    RuntimeVersion: String
}
/// Describes a Sync configuration for a resolver. Specifies which
/// Conflict Detection strategy and Resolution strategy to use when the
/// resolver is invoked.
class SyncConfig {
    /// The Conflict Detection strategy to use.
    ConflictDetection: String
    /// The Conflict Resolution strategy to perform in the event of a
    /// conflict.
    ConflictHandler: String?
    LambdaConflictHandlerConfig: LambdaConflictHandlerConfig?
}
/// The LambdaConflictHandlerConfig when configuring LAMBDA as the
/// Conflict Handler.
class LambdaConflictHandlerConfig {
    /// The Amazon Resource Name (ARN) for the Lambda function to use as the
    /// Conflict Handler.
    LambdaConflictHandlerArn: String?
}
