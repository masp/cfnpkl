/// Resource Type definition for AWS::EFS::AccessPoint
extends ".../AWS/Resource.pkl"
Type = "AWS::EFS::AccessPoint"
Properties: Props?
class Props {
    AccessPointId: String?
    Arn: String?
    /// (optional) A string of up to 64 ASCII characters that Amazon EFS uses
    /// to ensure idempotent creation.
    ClientToken: String?
    AccessPointTags: Listing<AccessPointTag>?
    /// The ID of the EFS file system that the access point provides access
    /// to.
    FileSystemId: String?
    /// The operating system user and group applied to all file system
    /// requests made using the access point.
    PosixUser: PosixUser?
    /// Specifies the directory on the Amazon EFS file system that the access
    /// point exposes as the root directory of your file system to NFS clients
    /// using the access point. The clients using the access point can only
    /// access the root directory and below. If the RootDirectory>Path
    /// specified does not exist, EFS creates it and applies the CreationInfo
    /// settings when a client connects to an access point. When specifying a
    /// RootDirectory, you need to provide the Path, and the CreationInfo is
    /// optional.
    RootDirectory: RootDirectory?
}
class AccessPointTag {
    Key: String(length <= 128 && length >= 1)?
    Value: String(length <= 256 && length >= 1)?
}
class PosixUser {
    /// The POSIX user ID used for all file system operations using this
    /// access point.
    Uid: String
    /// The POSIX group ID used for all file system operations using this
    /// access point.
    Gid: String
    /// Secondary POSIX group IDs used for all file system operations using
    /// this access point.
    SecondaryGids: Listing<String>?
}
class RootDirectory {
    /// Specifies the path on the EFS file system to expose as the root
    /// directory to NFS clients using the access point to access the EFS file
    /// system. A path can have up to four subdirectories. If the specified
    /// path does not exist, you are required to provide the CreationInfo.
    Path: String(length <= 100 && length >= 1)?
    /// (Optional) Specifies the POSIX IDs and permissions to apply to the
    /// access point's RootDirectory. If the RootDirectory>Path specified does
    /// not exist, EFS creates the root directory using the CreationInfo
    /// settings when a client connects to an access point. When specifying
    /// the CreationInfo, you must provide values for all properties.   If you
    /// do not provide CreationInfo and the specified RootDirectory>Path does
    /// not exist, attempts to mount the file system using the access point
    /// will fail.
    CreationInfo: CreationInfo?
}
class CreationInfo {
    /// Specifies the POSIX user ID to apply to the RootDirectory. Accepts
    /// values from 0 to 2^32 (4294967295).
    OwnerUid: String
    /// Specifies the POSIX group ID to apply to the RootDirectory. Accepts
    /// values from 0 to 2^32 (4294967295).
    OwnerGid: String
    /// Specifies the POSIX permissions to apply to the RootDirectory, in the
    /// format of an octal number representing the file's mode bits.
    Permissions: String(matches(Regex(#"^[0-7]{3,4}$"#)))
}
