/// Resource schema for AWS::ImageBuilder::ContainerRecipe
extends ".../AWS/Resource.pkl"
Type = "AWS::ImageBuilder::ContainerRecipe"
Properties: Props?
class Props {
    /// The Amazon Resource Name (ARN) of the container recipe.
    Arn: String?
    /// The name of the container recipe.
    Name: String?
    /// The description of the container recipe.
    Description: String?
    /// The semantic version of the container recipe
    /// (<major>.<minor>.<patch>).
    Version: String?
    /// Components for build and test that are included in the container
    /// recipe.
    Components: Listing<ComponentConfiguration>?
    /// A group of options that can be used to configure an instance for
    /// building and testing container images.
    InstanceConfiguration: InstanceConfiguration?
    /// Dockerfiles are text documents that are used to build Docker
    /// containers, and ensure that they contain all of the elements required
    /// by the application running inside. The template data consists of
    /// contextual variables where Image Builder places build information or
    /// scripts, based on your container image recipe.
    DockerfileTemplateData: String?
    /// The S3 URI for the Dockerfile that will be used to build your
    /// container image.
    DockerfileTemplateUri: String?
    /// Specifies the operating system platform when you use a custom source
    /// image.
    PlatformOverride: "Windows" | "Linux" | *Null
    /// Specifies the type of container, such as Docker.
    ContainerType: "DOCKER" | *Null
    /// Specifies the operating system version for the source image.
    ImageOsVersionOverride: String?
    /// The destination repository for the container image.
    TargetRepository: TargetContainerRepository?
    /// Identifies which KMS key is used to encrypt the container image.
    KmsKeyId: String?
    /// The source image for the container recipe.
    ParentImage: String?
    /// The working directory to be used during build and test workflows.
    WorkingDirectory: String?
    /// Tags that are attached to the container recipe.
    Tags: Mapping?
}
/// Configuration details of the component.
class ComponentConfiguration {
    /// The Amazon Resource Name (ARN) of the component.
    ComponentArn: String?
    /// A group of parameter settings that are used to configure the component
    /// for a specific recipe.
    Parameters: Listing<ComponentParameter>?
}
/// Contains a key/value pair that sets the named component parameter.
class ComponentParameter {
    /// The name of the component parameter to set.
    Name: String
    /// Sets the value for the named component parameter.
    Value: Listing<String>
}
/// A group of options that can be used to configure an instance for
/// building and testing container images.
class InstanceConfiguration {
    /// The AMI ID to use as the base image for a container build and test
    /// instance. If not specified, Image Builder will use the appropriate
    /// ECS-optimized AMI as a base image.
    Image: String?
    /// Defines the block devices to attach for building an instance from this
    /// Image Builder AMI.
    BlockDeviceMappings: Listing<InstanceBlockDeviceMapping>?
}
/// Defines block device mappings for the instance used to configure your
/// image.
class InstanceBlockDeviceMapping {
    /// The device to which these mappings apply.
    DeviceName: String?
    /// Use to manage instance ephemeral devices.
    VirtualName: String?
    /// Use to remove a mapping from the parent image.
    NoDevice: String?
    /// Use to manage Amazon EBS-specific configuration for this mapping.
    Ebs: EbsInstanceBlockDeviceSpecification?
}
/// Amazon EBS-specific block device mapping specifications.
class EbsInstanceBlockDeviceSpecification {
    /// Use to configure device encryption.
    Encrypted: Boolean?
    /// Use to configure delete on termination of the associated device.
    DeleteOnTermination: Boolean?
    /// Use to configure device IOPS.
    Iops: Int?
    /// Use to configure the KMS key to use when encrypting the device.
    KmsKeyId: String?
    /// The snapshot that defines the device contents.
    SnapshotId: String?
    /// For GP3 volumes only - The throughput in MiB/s that the volume
    /// supports.
    Throughput: Int?
    /// Use to override the device's volume size.
    VolumeSize: Int?
    /// Use to override the device's volume type.
    VolumeType: "standard" | "io1" | "io2" | "gp2" | "gp3" | "sc1" | "st1" | *Null
}
/// The container repository where the output container image is stored.
class TargetContainerRepository {
    /// Specifies the service in which this image was registered.
    Service: "ECR" | *Null
    /// The name of the container repository where the output container image
    /// is stored. This name is prefixed by the repository location.
    RepositoryName: String?
}
