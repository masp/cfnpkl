/// Resource schema for AWS::MediaPackage::Channel
extends ".../AWS/Resource.pkl"
Type = "AWS::MediaPackage::Channel"
Properties: Props?
class Props {
    /// The Amazon Resource Name (ARN) assigned to the Channel.
    Arn: String?
    /// The ID of the Channel.
    Id: String(length <= 256 && length >= 1 && matches(Regex(#"\A[0-9a-zA-Z-_]+\Z"#)))?
    /// A short text description of the Channel.
    Description: String?
    /// An HTTP Live Streaming (HLS) ingest resource configuration.
    HlsIngest: HlsIngest?
    /// A collection of tags associated with a resource
    Tags: Listing<Tag>?
    /// The configuration parameters for egress access logging.
    EgressAccessLogs: LogConfiguration?
    /// The configuration parameters for egress access logging.
    IngressAccessLogs: LogConfiguration?
}
/// An HTTP Live Streaming (HLS) ingest resource configuration.
class HlsIngest {
    /// A list of endpoints to which the source stream should be sent.
    ingestEndpoints: Listing<IngestEndpoint>?
}
/// An endpoint for ingesting source content for a Channel.
class IngestEndpoint {
    /// The system generated unique identifier for the IngestEndpoint
    Id: String
    /// The system generated username for ingest authentication.
    Username: String
    /// The system generated password for ingest authentication.
    Password: String
    /// The ingest URL to which the source stream should be sent.
    Url: String
}
class Tag {
    Key: String
    Value: String
}
class LogConfiguration {
    /// Sets a custom AWS CloudWatch log group name for access logs. If a log
    /// group name isn't specified, the defaults are used:
    /// /aws/MediaPackage/EgressAccessLogs for egress access logs and
    /// /aws/MediaPackage/IngressAccessLogs for ingress access logs.
    LogGroupName: String(length <= 256 && length >= 1 && matches(Regex(#"\A^(\/aws\/MediaPackage\/)[a-zA-Z0-9_-]+\Z"#)))?
}
